{"ast":null,"code":"import api from \"../utils/api\";\nimport history from \"../utils/history\";\nimport { AUTH_ERROR, LOGIN_FAIL, LOGIN_SUCCESS, LOGOUT, EMAILAUTH_SENT, USERAUTH_LOADED, SIGNUP_FAIL, SIGNUP_SUCCESS, REMOVEAUTH_ERROR, PASSWORD_CHANGED, EMAIL_ERROR } from \"./types\";\nimport { setAlert } from \"./alert\";\nimport { updateLoadingSpinner } from \"./mixvalues\";\nexport const loadUser = login => async dispatch => {\n  try {\n    const res = await api.get(\"/auth\");\n    dispatch({\n      type: USERAUTH_LOADED,\n      payload: res.data\n    });\n    if (login) switch (res.data.type) {\n      case \"captain\":\n      case \"captain&admin\":\n      case \"admin\":\n        history.push(\"/dashboard\");\n        break;\n\n      default:\n        history.push(\"/\");\n        break;\n    }\n  } catch (err) {\n    dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\n    dispatch({\n      type: AUTH_ERROR,\n      payload: {\n        type: err.response.statusText,\n        status: err.response.status,\n        msg: err.response.data.msg\n      }\n    });\n  }\n};\nexport const loginUser = formData => async dispatch => {\n  dispatch(updateLoadingSpinner(true));\n\n  try {\n    const res = await api.post(\"/auth\", formData);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser(true));\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => {\n        dispatch(setAlert(error.msg, \"danger\", \"2\"));\n      });\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: errors\n      });\n    } else {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: {\n          type: err.response.statusText,\n          status: err.response.status,\n          msg: err.response.data.msg\n        }\n      });\n    }\n\n    window.scrollTo(0, 0);\n  }\n\n  dispatch(updateLoadingSpinner(false));\n};\nexport const facebookLogin = fbkData => async dispatch => {\n  dispatch(updateLoadingSpinner(true));\n\n  try {\n    const res = await api.post(\"/auth/facebooklogin\", fbkData);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser(true));\n  } catch (err) {\n    dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: {\n        type: err.response.statusText,\n        status: err.response.status,\n        msg: err.response.data.msg\n      }\n    });\n    window.scrollTo(0, 0);\n  }\n\n  dispatch(updateLoadingSpinner(false));\n};\nexport const googleLogin = googleData => async dispatch => {\n  dispatch(updateLoadingSpinner(true));\n\n  try {\n    const res = await api.post(\"/auth/googlelogin\", googleData);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser(true));\n  } catch (err) {\n    dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: {\n        type: err.response.statusText,\n        status: err.response.status,\n        msg: err.response.data.msg\n      }\n    });\n    window.scrollTo(0, 0);\n  }\n\n  dispatch(updateLoadingSpinner(false));\n};\nexport const signup = formData => async dispatch => {\n  dispatch(updateLoadingSpinner(true));\n\n  try {\n    if (formData.formImg) await api.post(\"/user/upload-img\", formData.formImg);\n    await api.post(\"/auth/signup\", formData);\n    dispatch({\n      type: EMAILAUTH_SENT\n    });\n  } catch (err) {\n    if (err.response.data.errors) {\n      const errors = err.response.data.errors;\n      errors.forEach(error => {\n        dispatch(setAlert(error.msg, \"danger\", \"2\"));\n      });\n      dispatch({\n        type: SIGNUP_FAIL,\n        payload: errors\n      });\n    } else {\n      dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\n      dispatch({\n        type: SIGNUP_FAIL,\n        payload: {\n          type: err.response.statusText,\n          status: err.response.status,\n          msg: err.response.data.msg\n        }\n      });\n    }\n\n    window.scrollTo(0, 0);\n  }\n\n  dispatch(updateLoadingSpinner(false));\n};\nexport const sendPasswordLink = email => async dispatch => {\n  dispatch(updateLoadingSpinner(true));\n\n  try {\n    const res = await api.put(\"/auth/password\", {\n      email\n    });\n    dispatch({\n      type: EMAILAUTH_SENT\n    });\n    dispatch(setAlert(res.data.msg, \"success\", \"2\"));\n  } catch (err) {\n    if (err.response.data.errors) {\n      const errors = err.response.data.errors;\n      errors.forEach(error => {\n        dispatch(setAlert(error.msg, \"danger\", \"2\"));\n      });\n      dispatch({\n        type: SIGNUP_FAIL,\n        payload: errors\n      });\n    } else {\n      dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\n      dispatch({\n        type: SIGNUP_FAIL,\n        payload: {\n          type: err.response.statusText,\n          status: err.response.status,\n          msg: err.response.data.msg\n        }\n      });\n    }\n\n    window.scrollTo(0, 0);\n  }\n\n  dispatch(updateLoadingSpinner(false));\n};\nexport const resetPassword = formData => async dispatch => {\n  dispatch(updateLoadingSpinner(true));\n\n  try {\n    const res = await api.put(\"/auth/reset-password\", formData);\n    dispatch({\n      type: PASSWORD_CHANGED,\n      payload: res.data\n    });\n\n    switch (res.data.type) {\n      case \"customer\":\n        history.push(\"/vessels\");\n        break;\n\n      default:\n        history.push(\"/\");\n        break;\n    }\n\n    dispatch(setAlert(\"Password successfully changed\", \"success\", \"1\"));\n  } catch (err) {\n    if (err.response.data.errors) {\n      const errors = err.response.data.errors;\n      errors.forEach(error => {\n        dispatch(setAlert(error.msg, \"danger\", \"2\"));\n      });\n      dispatch({\n        type: SIGNUP_FAIL,\n        payload: errors\n      });\n    } else {\n      dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\n      dispatch({\n        type: SIGNUP_FAIL,\n        payload: {\n          type: err.response.statusText,\n          status: err.response.status,\n          msg: err.response.data.msg\n        }\n      });\n    }\n\n    window.scrollTo(0, 0);\n  }\n\n  dispatch(updateLoadingSpinner(false));\n};\nexport const activation = token => async dispatch => {\n  dispatch(updateLoadingSpinner(true));\n\n  try {\n    const res = await api.post(\"/auth/activation\", {\n      token\n    });\n    dispatch({\n      type: SIGNUP_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: SIGNUP_FAIL,\n      payload: {\n        type: err.response.statusText,\n        status: err.response.status,\n        msg: err.response.data.msg\n      }\n    });\n    window.scrollTo(0, 0);\n  }\n\n  dispatch(updateLoadingSpinner(false));\n};\nexport const sendEmail = formData => async dispatch => {\n  dispatch(updateLoadingSpinner(true));\n\n  try {\n    await api.post(\"/auth/send-email\", formData);\n    dispatch({\n      type: EMAILAUTH_SENT\n    });\n    dispatch(setAlert(\"Email Sent\", \"success\", \"2\"));\n  } catch (err) {\n    if (err.response.data.errors) {\n      const errors = err.response.data.errors;\n      errors.forEach(error => {\n        dispatch(setAlert(error.msg, \"danger\", \"2\"));\n      });\n      dispatch({\n        type: EMAIL_ERROR,\n        payload: errors\n      });\n    } else {\n      dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\n      dispatch({\n        type: EMAIL_ERROR,\n        payload: {\n          type: err.response.statusText,\n          status: err.response.status,\n          msg: err.response.data.msg\n        }\n      });\n    }\n  }\n\n  dispatch(updateLoadingSpinner(false));\n};\nexport const removeAuthError = param => dispatch => {\n  dispatch({\n    type: REMOVEAUTH_ERROR,\n    payload: param\n  });\n};\nexport const logOut = () => dispatch => {\n  dispatch({\n    type: LOGOUT\n  });\n  history.push(\"/login\");\n};","map":{"version":3,"sources":["C:/Users/melig/OneDrive/Escritorio/prog/Tahoe-drone backend/client/src/actions/auth.js"],"names":["api","history","AUTH_ERROR","LOGIN_FAIL","LOGIN_SUCCESS","LOGOUT","EMAILAUTH_SENT","USERAUTH_LOADED","SIGNUP_FAIL","SIGNUP_SUCCESS","REMOVEAUTH_ERROR","PASSWORD_CHANGED","EMAIL_ERROR","setAlert","updateLoadingSpinner","loadUser","login","dispatch","res","get","type","payload","data","push","err","response","msg","statusText","status","loginUser","formData","post","errors","forEach","error","window","scrollTo","facebookLogin","fbkData","googleLogin","googleData","signup","formImg","sendPasswordLink","email","put","resetPassword","activation","token","console","log","sendEmail","removeAuthError","param","logOut"],"mappings":"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","sourcesContent":["import api from \"../utils/api\";\r\nimport history from \"../utils/history\";\r\n\r\nimport {\r\n   AUTH_ERROR,\r\n   LOGIN_FAIL,\r\n   LOGIN_SUCCESS,\r\n   LOGOUT,\r\n   EMAILAUTH_SENT,\r\n   USERAUTH_LOADED,\r\n   SIGNUP_FAIL,\r\n   SIGNUP_SUCCESS,\r\n   REMOVEAUTH_ERROR,\r\n   PASSWORD_CHANGED,\r\n   EMAIL_ERROR,\r\n} from \"./types\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport { updateLoadingSpinner } from \"./mixvalues\";\r\n\r\nexport const loadUser = (login) => async (dispatch) => {\r\n   try {\r\n      const res = await api.get(\"/auth\");\r\n      dispatch({\r\n         type: USERAUTH_LOADED,\r\n         payload: res.data,\r\n      });\r\n\r\n      if (login)\r\n         switch (res.data.type) {\r\n            case \"captain\":\r\n            case \"captain&admin\":\r\n            case \"admin\":\r\n               history.push(\"/dashboard\");\r\n               break;\r\n            default:\r\n               history.push(\"/\");\r\n               break;\r\n         }\r\n   } catch (err) {\r\n      dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      dispatch({\r\n         type: AUTH_ERROR,\r\n         payload: {\r\n            type: err.response.statusText,\r\n            status: err.response.status,\r\n            msg: err.response.data.msg,\r\n         },\r\n      });\r\n   }\r\n};\r\n\r\nexport const loginUser = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.post(\"/auth\", formData);\r\n      dispatch({\r\n         type: LOGIN_SUCCESS,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(loadUser(true));\r\n   } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n         errors.forEach((error) => {\r\n            dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n         });\r\n         dispatch({\r\n            type: LOGIN_FAIL,\r\n            payload: errors,\r\n         });\r\n      } else {\r\n         dispatch({\r\n            type: LOGIN_FAIL,\r\n            payload: {\r\n               type: err.response.statusText,\r\n               status: err.response.status,\r\n               msg: err.response.data.msg,\r\n            },\r\n         });\r\n      }\r\n      window.scrollTo(0, 0);\r\n   }\r\n   dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const facebookLogin = (fbkData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n\r\n   try {\r\n      const res = await api.post(\"/auth/facebooklogin\", fbkData);\r\n\r\n      dispatch({\r\n         type: LOGIN_SUCCESS,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(loadUser(true));\r\n   } catch (err) {\r\n      dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      dispatch({\r\n         type: LOGIN_FAIL,\r\n         payload: {\r\n            type: err.response.statusText,\r\n            status: err.response.status,\r\n            msg: err.response.data.msg,\r\n         },\r\n      });\r\n\r\n      window.scrollTo(0, 0);\r\n   }\r\n\r\n   dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const googleLogin = (googleData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n\r\n   try {\r\n      const res = await api.post(\"/auth/googlelogin\", googleData);\r\n\r\n      dispatch({\r\n         type: LOGIN_SUCCESS,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(loadUser(true));\r\n   } catch (err) {\r\n      dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      dispatch({\r\n         type: LOGIN_FAIL,\r\n         payload: {\r\n            type: err.response.statusText,\r\n            status: err.response.status,\r\n            msg: err.response.data.msg,\r\n         },\r\n      });\r\n\r\n      window.scrollTo(0, 0);\r\n   }\r\n\r\n   dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const signup = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n\r\n   try {\r\n      if (formData.formImg)\r\n         await api.post(\"/user/upload-img\", formData.formImg);\r\n\r\n      await api.post(\"/auth/signup\", formData);\r\n\r\n      dispatch({\r\n         type: EMAILAUTH_SENT,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.data.errors) {\r\n         const errors = err.response.data.errors;\r\n         errors.forEach((error) => {\r\n            dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n         });\r\n         dispatch({\r\n            type: SIGNUP_FAIL,\r\n            payload: errors,\r\n         });\r\n      } else {\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         dispatch({\r\n            type: SIGNUP_FAIL,\r\n            payload: {\r\n               type: err.response.statusText,\r\n               status: err.response.status,\r\n               msg: err.response.data.msg,\r\n            },\r\n         });\r\n      }\r\n\r\n      window.scrollTo(0, 0);\r\n   }\r\n\r\n   dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const sendPasswordLink = (email) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n\r\n   try {\r\n      const res = await api.put(\"/auth/password\", { email });\r\n\r\n      dispatch({\r\n         type: EMAILAUTH_SENT,\r\n      });\r\n\r\n      dispatch(setAlert(res.data.msg, \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.data.errors) {\r\n         const errors = err.response.data.errors;\r\n         errors.forEach((error) => {\r\n            dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n         });\r\n         dispatch({\r\n            type: SIGNUP_FAIL,\r\n            payload: errors,\r\n         });\r\n      } else {\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         dispatch({\r\n            type: SIGNUP_FAIL,\r\n            payload: {\r\n               type: err.response.statusText,\r\n               status: err.response.status,\r\n               msg: err.response.data.msg,\r\n            },\r\n         });\r\n      }\r\n\r\n      window.scrollTo(0, 0);\r\n   }\r\n\r\n   dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const resetPassword = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n\r\n   try {\r\n      const res = await api.put(\"/auth/reset-password\", formData);\r\n\r\n      dispatch({\r\n         type: PASSWORD_CHANGED,\r\n         payload: res.data,\r\n      });\r\n\r\n      switch (res.data.type) {\r\n         case \"customer\":\r\n            history.push(\"/vessels\");\r\n            break;\r\n         default:\r\n            history.push(\"/\");\r\n            break;\r\n      }\r\n\r\n      dispatch(setAlert(\"Password successfully changed\", \"success\", \"1\"));\r\n   } catch (err) {\r\n      if (err.response.data.errors) {\r\n         const errors = err.response.data.errors;\r\n         errors.forEach((error) => {\r\n            dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n         });\r\n         dispatch({\r\n            type: SIGNUP_FAIL,\r\n            payload: errors,\r\n         });\r\n      } else {\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         dispatch({\r\n            type: SIGNUP_FAIL,\r\n            payload: {\r\n               type: err.response.statusText,\r\n               status: err.response.status,\r\n               msg: err.response.data.msg,\r\n            },\r\n         });\r\n      }\r\n\r\n      window.scrollTo(0, 0);\r\n   }\r\n\r\n   dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const activation = (token) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n\r\n   try {\r\n      const res = await api.post(\"/auth/activation\", { token });\r\n\r\n      dispatch({\r\n         type: SIGNUP_SUCCESS,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      console.log(err);\r\n      dispatch({\r\n         type: SIGNUP_FAIL,\r\n         payload: {\r\n            type: err.response.statusText,\r\n            status: err.response.status,\r\n            msg: err.response.data.msg,\r\n         },\r\n      });\r\n\r\n      window.scrollTo(0, 0);\r\n   }\r\n\r\n   dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const sendEmail = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n\r\n   try {\r\n      await api.post(\"/auth/send-email\", formData);\r\n\r\n      dispatch({\r\n         type: EMAILAUTH_SENT,\r\n      });\r\n\r\n      dispatch(setAlert(\"Email Sent\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.data.errors) {\r\n         const errors = err.response.data.errors;\r\n         errors.forEach((error) => {\r\n            dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n         });\r\n         dispatch({\r\n            type: EMAIL_ERROR,\r\n            payload: errors,\r\n         });\r\n      } else {\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         dispatch({\r\n            type: EMAIL_ERROR,\r\n            payload: {\r\n               type: err.response.statusText,\r\n               status: err.response.status,\r\n               msg: err.response.data.msg,\r\n            },\r\n         });\r\n      }\r\n   }\r\n\r\n   dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const removeAuthError = (param) => (dispatch) => {\r\n   dispatch({\r\n      type: REMOVEAUTH_ERROR,\r\n      payload: param,\r\n   });\r\n};\r\n\r\nexport const logOut = () => (dispatch) => {\r\n   dispatch({\r\n      type: LOGOUT,\r\n   });\r\n   history.push(\"/login\");\r\n};\r\n"]},"metadata":{},"sourceType":"module"}