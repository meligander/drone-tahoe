{"ast":null,"code":"import { USERAUTH_LOADED, AUTH_ERROR, LOGIN_FAIL, LOGIN_SUCCESS, LOGOUT, SIGNUP_FAIL, EMAILAUTH_SENT, REMOVEAUTH_ERROR, SIGNUP_SUCCESS, PASSWORD_CHANGED, EMAIL_ERROR } from \"../actions/types\";\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  loggedUser: null,\n  loading: true,\n  isAuthenticated: false,\n  error: \"\",\n  emailSent: false\n};\n\nconst authReducer = (state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case USERAUTH_LOADED:\n      return { ...state,\n        loading: false,\n        loggedUser: payload,\n        isAuthenticated: true\n      };\n\n    case SIGNUP_SUCCESS:\n      return { ...state,\n        loading: false,\n        loggedUser: payload.user,\n        isAuthenticated: true,\n        token: payload.token\n      };\n\n    case LOGIN_SUCCESS:\n      return { ...state,\n        loading: false,\n        token: payload.token\n      };\n\n    case AUTH_ERROR:\n      return { ...state,\n        token: null,\n        isAuthenticated: false,\n        loggedUser: null,\n        loading: false,\n        error: payload ? payload : \"\"\n      };\n\n    case PASSWORD_CHANGED:\n      return { ...state,\n        token: payload.token,\n        loading: false,\n        loggedUser: payload.user,\n        isAuthenticated: true\n      };\n\n    case EMAIL_ERROR:\n    case SIGNUP_FAIL:\n    case LOGIN_FAIL:\n      return { ...state,\n        error: payload,\n        loading: false,\n        token: null,\n        isAuthenticated: false,\n        loggedUser: null\n      };\n\n    case EMAILAUTH_SENT:\n      return { ...state,\n        emailSent: true,\n        error: \"\"\n      };\n\n    case REMOVEAUTH_ERROR:\n      return { ...state,\n        error: state.error.filter(errorI => errorI.param !== payload)\n      };\n\n    case LOGOUT:\n      return { ...state,\n        token: null,\n        isAuthenticated: false,\n        loggedUser: null,\n        loading: true,\n        error: \"\"\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;","map":{"version":3,"sources":["C:/Users/melig/OneDrive/Escritorio/prog/Tahoe-drone backend/client/src/reducers/auth.js"],"names":["USERAUTH_LOADED","AUTH_ERROR","LOGIN_FAIL","LOGIN_SUCCESS","LOGOUT","SIGNUP_FAIL","EMAILAUTH_SENT","REMOVEAUTH_ERROR","SIGNUP_SUCCESS","PASSWORD_CHANGED","EMAIL_ERROR","initialState","token","localStorage","getItem","loggedUser","loading","isAuthenticated","error","emailSent","authReducer","state","action","type","payload","user","filter","errorI","param"],"mappings":"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","sourcesContent":["import {\r\n   USERAUTH_LOADED,\r\n   AUTH_ERROR,\r\n   LOGIN_FAIL,\r\n   LOGIN_SUCCESS,\r\n   LOGOUT,\r\n   SIGNUP_FAIL,\r\n   EMAILAUTH_SENT,\r\n   REMOVEAUTH_ERROR,\r\n   SIGNUP_SUCCESS,\r\n   PASSWORD_CHANGED,\r\n   EMAIL_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   token: localStorage.getItem(\"token\"),\r\n   loggedUser: null,\r\n   loading: true,\r\n   isAuthenticated: false,\r\n   error: \"\",\r\n   emailSent: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n   const { type, payload } = action;\r\n\r\n   switch (type) {\r\n      case USERAUTH_LOADED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            loggedUser: payload,\r\n            isAuthenticated: true,\r\n         };\r\n      case SIGNUP_SUCCESS:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            loggedUser: payload.user,\r\n            isAuthenticated: true,\r\n            token: payload.token,\r\n         };\r\n      case LOGIN_SUCCESS:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            token: payload.token,\r\n         };\r\n      case AUTH_ERROR:\r\n         return {\r\n            ...state,\r\n            token: null,\r\n            isAuthenticated: false,\r\n            loggedUser: null,\r\n            loading: false,\r\n            error: payload ? payload : \"\",\r\n         };\r\n      case PASSWORD_CHANGED:\r\n         return {\r\n            ...state,\r\n            token: payload.token,\r\n            loading: false,\r\n            loggedUser: payload.user,\r\n            isAuthenticated: true,\r\n         };\r\n      case EMAIL_ERROR:\r\n      case SIGNUP_FAIL:\r\n      case LOGIN_FAIL:\r\n         return {\r\n            ...state,\r\n            error: payload,\r\n            loading: false,\r\n            token: null,\r\n            isAuthenticated: false,\r\n            loggedUser: null,\r\n         };\r\n      case EMAILAUTH_SENT:\r\n         return {\r\n            ...state,\r\n            emailSent: true,\r\n            error: \"\",\r\n         };\r\n      case REMOVEAUTH_ERROR:\r\n         return {\r\n            ...state,\r\n            error: state.error.filter((errorI) => errorI.param !== payload),\r\n         };\r\n      case LOGOUT:\r\n         return {\r\n            ...state,\r\n            token: null,\r\n            isAuthenticated: false,\r\n            loggedUser: null,\r\n            loading: true,\r\n            error: \"\",\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n};\r\n\r\nexport default authReducer;\r\n"]},"metadata":{},"sourceType":"module"}