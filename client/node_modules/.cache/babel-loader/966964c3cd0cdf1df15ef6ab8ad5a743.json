{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\melig\\\\OneDrive\\\\Escritorio\\\\prog\\\\Tahoe-drone backend\\\\client\\\\src\\\\components\\\\Schedule\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport Calendar from 'react-calendar';\nimport { connect } from 'react-redux';\nimport { checkDayAvailability, checkMonthAvailability } from '../../actions/day';\nimport { updateReservation, registerReservation } from '../../actions/reservation';\nimport Alert from '../Alert';\n\nconst Schedule = ({\n  job,\n  auth: {\n    loggedUser\n  },\n  reservations: {\n    reservation\n  },\n  days: {\n    availableHours,\n    loadingAvailableHours,\n    disabledDays\n  },\n  checkMonthAvailability,\n  checkDayAvailability,\n\n  /* updateReservation, */\n  registerReservation\n}) => {\n  _s();\n\n  const type = reservation ? 'update' : 'reserve';\n  const [formData, setFormData] = useState({\n    hourFrom: '',\n    hourTo: '',\n    value: job.price,\n    jobId: job.id,\n    userId: loggedUser.id\n  });\n  const {\n    hourFrom,\n    hourTo,\n    value\n  } = formData;\n  const [adminValues, setAdminValues] = useState({\n    date: new Date(),\n    tab: 0,\n    toggleModal: false\n  });\n  const {\n    date,\n    tab,\n    toggleModal\n  } = adminValues;\n  useEffect(() => {\n    const today = new Date();\n    checkMonthAvailability(job.id, today.getMonth(), today.getFullYear());\n  }, [checkMonthAvailability, job.id]);\n\n  const onChangeDate = changedDate => {\n    setAdminValues(prev => ({ ...prev,\n      date: changedDate,\n      tab: 1\n    }));\n    checkDayAvailability(moment(changedDate).format('YYYY-MM-DD[T00:00:00Z]'), job.id);\n  };\n\n  const selectHourFrom = time => {\n    const newDate = new Date(date);\n    newDate.setHours(time);\n    let newToDate;\n    newToDate = new Date(newDate);\n    newToDate.setHours(newDate.getHours() + job.time);\n    setFormData(prev => ({ ...prev,\n      hourFrom: newDate,\n      hourTo: newToDate\n    }));\n    setAdminValues(prev => ({ ...prev,\n      tab: 2\n    }));\n  };\n\n  const getToTime = item => {\n    const time = hourFrom.getHours() + vessel.prices[item].time;\n    if (time > 24) return time - 24 + ' am';\n    return `${time % 12 !== 0 ? time % 12 : 12} ${time >= 12 && time !== 24 ? 'pm' : 'am'}`;\n  };\n\n  const tileDisabled = ({\n    date,\n    view\n  }) => {\n    if (view === 'month' && disabledDays.length > 0) {\n      // Check if a date React-Calendar wants to check is on the list of disabled dates\n      return disabledDays.find(dDate => isSameDay(dDate, date));\n    }\n  };\n\n  const isSameDay = (date1, date2) => {\n    if (moment(date1.substring(0, date1.length - 2)).format('MM-DD-YYYY') === moment(date2).format('MM-DD-YYYY')) return true;\n    return false;\n  };\n\n  const tabOpen = () => {\n    switch (tab) {\n      case 0:\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"heading-primary-subheading\",\n            children: \"Pick up a Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 7\n          }, this)\n        }, void 0, false);\n\n      case 1:\n        return !loadingAvailableHours && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: availableHours.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"schedule-title\",\n              children: \"From:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 10\n            }, this), availableHours.map((hour, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"schedule-item\",\n              onClick: () => selectHourFrom(hour),\n              children: `${hour % 12 !== 0 ? hour % 12 : 12} ${hour >= 12 ? 'pm' : 'am'}`\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 11\n            }, this))]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"schedule-warning\",\n            children: \"No availability on this day\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 9\n          }, this)\n        }, void 0, false);\n\n      case 2:\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"schedule-title\",\n            children: [type = 'update' ? 'New' : 'Reservation', \" Info:\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"form\",\n            onSubmit: e => {\n              e.preventDefault();\n\n              if (type === 'update') {\n                setAdminValues(prev => ({ ...prev,\n                  toggleModal: !toggleModal\n                }));\n              } else {\n                registerReservation({ ...formData,\n                  hourFrom: moment(hourFrom).format('YYYY-MM-DD[T]HH:mm:SS[Z]'),\n                  hourTo: moment(hourTo).format('YYYY-MM-DD[T]HH:mm:SS[Z]')\n                });\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(Alert, {\n              type: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"schedule-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"schedule-subtitle\",\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 9\n              }, this), \" \\xA0\", /*#__PURE__*/_jsxDEV(Moment, {\n                date: hourFrom,\n                format: \"MM/DD/YY\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"schedule-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"schedule-subtitle\",\n                children: \"Time:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 9\n              }, this), \" \\xA0\", /*#__PURE__*/_jsxDEV(Moment, {\n                format: \"h a\",\n                date: hourFrom\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 9\n              }, this), \" -\", ' ', /*#__PURE__*/_jsxDEV(Moment, {\n                format: \"h a\",\n                date: hourTo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 8\n            }, this), type === 'reserve' && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"schedule-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-primary\",\n                children: \"Price:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 10\n              }, this), \" $\", value]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"u-center-text\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary\",\n                children: type === 'update' ? /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"far fa-save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 13\n                }, this) + ' Update' : 'Reserve Now!'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true);\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"schedule\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row-item\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-3\",\n        children: /*#__PURE__*/_jsxDEV(Calendar, {\n          value: date,\n          onChange: onChangeDate,\n          minDate: today,\n          maxDate: new Date(today.getFullYear() + 1, today.getMonth(), today.getDate()),\n          onActiveStartDateChange: e => {\n            if (e.view === 'month') {\n              checkMonthAvailability(vessel._id, e.activeStartDate.getMonth(), e.activeStartDate.getFullYear(), hoursDiff, reservation ? originalhourFrom : null, true);\n            }\n          },\n          tileDisabled: tileDisabled\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row-item\",\n      children: tabOpen()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Schedule, \"UMtd2sSEvQ5ftNRB/1EQL5WH8Js=\");\n\n_c = Schedule;\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  days: state.days,\n  reservations: state.reservations\n});\n\nexport default connect(mapStateToProps, {\n  checkDayAvailability,\n  checkMonthAvailability,\n  updateReservation,\n  registerReservation\n})(Schedule);\n\nvar _c;\n\n$RefreshReg$(_c, \"Schedule\");","map":{"version":3,"sources":["C:/Users/melig/OneDrive/Escritorio/prog/Tahoe-drone backend/client/src/components/Schedule/index.js"],"names":["React","useState","useEffect","Moment","moment","Calendar","connect","checkDayAvailability","checkMonthAvailability","updateReservation","registerReservation","Alert","Schedule","job","auth","loggedUser","reservations","reservation","days","availableHours","loadingAvailableHours","disabledDays","type","formData","setFormData","hourFrom","hourTo","value","price","jobId","id","userId","adminValues","setAdminValues","date","Date","tab","toggleModal","today","getMonth","getFullYear","onChangeDate","changedDate","prev","format","selectHourFrom","time","newDate","setHours","newToDate","getHours","getToTime","item","vessel","prices","tileDisabled","view","length","find","dDate","isSameDay","date1","date2","substring","tabOpen","map","hour","i","e","preventDefault","getDate","_id","activeStartDate","hoursDiff","originalhourFrom","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Moment from 'react-moment';\r\nimport moment from 'moment';\r\nimport Calendar from 'react-calendar';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n\tcheckDayAvailability,\r\n\tcheckMonthAvailability,\r\n} from '../../actions/day';\r\nimport {\r\n\tupdateReservation,\r\n\tregisterReservation,\r\n} from '../../actions/reservation';\r\n\r\nimport Alert from '../Alert';\r\n\r\nconst Schedule = ({\r\n\tjob,\r\n\tauth: { loggedUser },\r\n\treservations: { reservation },\r\n\tdays: { availableHours, loadingAvailableHours, disabledDays },\r\n\tcheckMonthAvailability,\r\n\tcheckDayAvailability,\r\n\t/* updateReservation, */\r\n\tregisterReservation,\r\n}) => {\r\n\tconst type = reservation ? 'update' : 'reserve';\r\n\r\n\tconst [formData, setFormData] = useState({\r\n\t\thourFrom: '',\r\n\t\thourTo: '',\r\n\t\tvalue: job.price,\r\n\t\tjobId: job.id,\r\n\t\tuserId: loggedUser.id,\r\n\t});\r\n\r\n\tconst { hourFrom, hourTo, value } = formData;\r\n\r\n\tconst [adminValues, setAdminValues] = useState({\r\n\t\tdate: new Date(),\r\n\t\ttab: 0,\r\n\t\ttoggleModal: false,\r\n\t});\r\n\r\n\tconst { date, tab, toggleModal } = adminValues;\r\n\r\n\tuseEffect(() => {\r\n\t\tconst today = new Date();\r\n\r\n\t\tcheckMonthAvailability(job.id, today.getMonth(), today.getFullYear());\r\n\t}, [checkMonthAvailability, job.id]);\r\n\r\n\tconst onChangeDate = (changedDate) => {\r\n\t\tsetAdminValues((prev) => ({\r\n\t\t\t...prev,\r\n\t\t\tdate: changedDate,\r\n\t\t\ttab: 1,\r\n\t\t}));\r\n\t\tcheckDayAvailability(\r\n\t\t\tmoment(changedDate).format('YYYY-MM-DD[T00:00:00Z]'),\r\n\t\t\tjob.id\r\n\t\t);\r\n\t};\r\n\r\n\tconst selectHourFrom = (time) => {\r\n\t\tconst newDate = new Date(date);\r\n\t\tnewDate.setHours(time);\r\n\r\n\t\tlet newToDate;\r\n\r\n\t\tnewToDate = new Date(newDate);\r\n\t\tnewToDate.setHours(newDate.getHours() + job.time);\r\n\r\n\t\tsetFormData((prev) => ({\r\n\t\t\t...prev,\r\n\t\t\thourFrom: newDate,\r\n\t\t\thourTo: newToDate,\r\n\t\t}));\r\n\r\n\t\tsetAdminValues((prev) => ({\r\n\t\t\t...prev,\r\n\t\t\ttab: 2,\r\n\t\t}));\r\n\t};\r\n\r\n\tconst getToTime = (item) => {\r\n\t\tconst time = hourFrom.getHours() + vessel.prices[item].time;\r\n\t\tif (time > 24) return time - 24 + ' am';\r\n\t\treturn `${time % 12 !== 0 ? time % 12 : 12} ${\r\n\t\t\ttime >= 12 && time !== 24 ? 'pm' : 'am'\r\n\t\t}`;\r\n\t};\r\n\r\n\tconst tileDisabled = ({ date, view }) => {\r\n\t\tif (view === 'month' && disabledDays.length > 0) {\r\n\t\t\t// Check if a date React-Calendar wants to check is on the list of disabled dates\r\n\t\t\treturn disabledDays.find((dDate) => isSameDay(dDate, date));\r\n\t\t}\r\n\t};\r\n\r\n\tconst isSameDay = (date1, date2) => {\r\n\t\tif (\r\n\t\t\tmoment(date1.substring(0, date1.length - 2)).format('MM-DD-YYYY') ===\r\n\t\t\tmoment(date2).format('MM-DD-YYYY')\r\n\t\t)\r\n\t\t\treturn true;\r\n\t\treturn false;\r\n\t};\r\n\r\n\tconst tabOpen = () => {\r\n\t\tswitch (tab) {\r\n\t\t\tcase 0:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<h5 className='heading-primary-subheading'>Pick up a Date</h5>\r\n\t\t\t\t\t</>\r\n\t\t\t\t);\r\n\t\t\tcase 1:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t!loadingAvailableHours && (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t{availableHours.length > 0 ? (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<p className='schedule-title'>From:</p>\r\n\t\t\t\t\t\t\t\t\t{availableHours.map((hour, i) => (\r\n\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='schedule-item'\r\n\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => selectHourFrom(hour)}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{`${hour % 12 !== 0 ? hour % 12 : 12} ${\r\n\t\t\t\t\t\t\t\t\t\t\t\thour >= 12 ? 'pm' : 'am'\r\n\t\t\t\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<h2 className='schedule-warning'>\r\n\t\t\t\t\t\t\t\t\tNo availability on this day\r\n\t\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\tcase 2:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<p className='schedule-title'>\r\n\t\t\t\t\t\t\t{(type = 'update' ? 'New' : 'Reservation')} Info:\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<form\r\n\t\t\t\t\t\t\tclassName='form'\r\n\t\t\t\t\t\t\tonSubmit={(e) => {\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\t\t\t\t\tif (type === 'update') {\r\n\t\t\t\t\t\t\t\t\tsetAdminValues((prev) => ({\r\n\t\t\t\t\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\t\t\t\t\ttoggleModal: !toggleModal,\r\n\t\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tregisterReservation({\r\n\t\t\t\t\t\t\t\t\t\t...formData,\r\n\t\t\t\t\t\t\t\t\t\thourFrom: moment(hourFrom).format(\r\n\t\t\t\t\t\t\t\t\t\t\t'YYYY-MM-DD[T]HH:mm:SS[Z]'\r\n\t\t\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\t\t\thourTo: moment(hourTo).format('YYYY-MM-DD[T]HH:mm:SS[Z]'),\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Alert type='2' />\r\n\t\t\t\t\t\t\t<p className='schedule-info'>\r\n\t\t\t\t\t\t\t\t<span className='schedule-subtitle'>Date</span> &nbsp;\r\n\t\t\t\t\t\t\t\t<Moment date={hourFrom} format='MM/DD/YY' />\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<p className='schedule-info'>\r\n\t\t\t\t\t\t\t\t<span className='schedule-subtitle'>Time:</span> &nbsp;\r\n\t\t\t\t\t\t\t\t<Moment format='h a' date={hourFrom} /> -{' '}\r\n\t\t\t\t\t\t\t\t<Moment format='h a' date={hourTo} />\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t{type === 'reserve' && (\r\n\t\t\t\t\t\t\t\t<p className='schedule-info'>\r\n\t\t\t\t\t\t\t\t\t<span className='text-primary'>Price:</span> ${value}\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t<div className='u-center-text'>\r\n\t\t\t\t\t\t\t\t<button type='submit' className='btn btn-primary'>\r\n\t\t\t\t\t\t\t\t\t{type === 'update'\r\n\t\t\t\t\t\t\t\t\t\t? <i className='far fa-save'></i> + ' Update'\r\n\t\t\t\t\t\t\t\t\t\t: 'Reserve Now!'}\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</>\r\n\t\t\t\t);\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='schedule'>\r\n\t\t\t{/* {type === 'update' && (\r\n\t\t\t\t<PopUp\r\n\t\t\t\t\ttoggleModal={toggleModal}\r\n\t\t\t\t\tsetToggleModal={() =>\r\n\t\t\t\t\t\tsetAdminValues((prev) => ({\r\n\t\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\t\ttoggleModal: !toggleModal,\r\n\t\t\t\t\t\t}))\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconfirm={() =>\r\n\t\t\t\t\t\tupdateReservation(\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\thourFrom: moment(hourFrom).format('YYYY-MM-DD[T]HH:mm:SS[Z]'),\r\n\t\t\t\t\t\t\t\thourTo: moment(hourTo).format('YYYY-MM-DD[T]HH:mm:SS[Z]'),\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\treservation.id,\r\n\t\t\t\t\t\t\tloggedUser.type\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttext='Are you sure you want to modify the reservation?'\r\n\t\t\t\t\ttype='confirmation'\r\n\t\t\t\t/>\r\n\t\t\t)} */}\r\n\r\n\t\t\t<div className='row-item'>\r\n\t\t\t\t<div className='my-3'>\r\n\t\t\t\t\t<Calendar\r\n\t\t\t\t\t\tvalue={date}\r\n\t\t\t\t\t\tonChange={onChangeDate}\r\n\t\t\t\t\t\tminDate={today}\r\n\t\t\t\t\t\tmaxDate={\r\n\t\t\t\t\t\t\tnew Date(\r\n\t\t\t\t\t\t\t\ttoday.getFullYear() + 1,\r\n\t\t\t\t\t\t\t\ttoday.getMonth(),\r\n\t\t\t\t\t\t\t\ttoday.getDate()\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tonActiveStartDateChange={(e) => {\r\n\t\t\t\t\t\t\tif (e.view === 'month') {\r\n\t\t\t\t\t\t\t\tcheckMonthAvailability(\r\n\t\t\t\t\t\t\t\t\tvessel._id,\r\n\t\t\t\t\t\t\t\t\te.activeStartDate.getMonth(),\r\n\t\t\t\t\t\t\t\t\te.activeStartDate.getFullYear(),\r\n\t\t\t\t\t\t\t\t\thoursDiff,\r\n\t\t\t\t\t\t\t\t\treservation ? originalhourFrom : null,\r\n\t\t\t\t\t\t\t\t\ttrue\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\ttileDisabled={tileDisabled}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='row-item'>{tabOpen()}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tauth: state.auth,\r\n\tdays: state.days,\r\n\treservations: state.reservations,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n\tcheckDayAvailability,\r\n\tcheckMonthAvailability,\r\n\tupdateReservation,\r\n\tregisterReservation,\r\n})(Schedule);\r\n"]},"metadata":{},"sourceType":"module"}