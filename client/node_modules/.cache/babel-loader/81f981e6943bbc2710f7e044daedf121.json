{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\melig\\\\OneDrive\\\\Escritorio\\\\prog\\\\Tahoe-drone backend\\\\client\\\\src\\\\components\\\\PrivateRoutes\\\\index.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Loading from '../layouts/Loading';\n\nconst PrivateRoutes = ({\n  component: Component,\n  auth: {\n    loggedUser,\n    loading,\n    token\n  },\n  types,\n  path\n}) => {\n  if (!loading && token) {\n    let pass = false;\n\n    if (types.length === 0) {\n      pass = true;\n    } else {\n      for (let x = 0; x < types.length; x++) {\n        if (types[x] === loggedUser.type) {\n          pass = true;\n          break;\n        }\n      }\n    }\n\n    if (pass) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: path,\n          component: Component\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this);\n    }\n  } else {\n    if (token === null) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this);\n    }\n  }\n};\n\n_c = PrivateRoutes;\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoutes);\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoutes\");","map":{"version":3,"sources":["C:/Users/melig/OneDrive/Escritorio/prog/Tahoe-drone backend/client/src/components/PrivateRoutes/index.js"],"names":["React","Route","Redirect","connect","Loading","PrivateRoutes","component","Component","auth","loggedUser","loading","token","types","path","pass","length","x","type","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,MAAMC,aAAa,GAAG,CAAC;AACtBC,EAAAA,SAAS,EAAEC,SADW;AAEtBC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,OAAd;AAAuBC,IAAAA;AAAvB,GAFgB;AAGtBC,EAAAA,KAHsB;AAItBC,EAAAA;AAJsB,CAAD,KAKhB;AACL,MAAI,CAACH,OAAD,IAAYC,KAAhB,EAAuB;AACtB,QAAIG,IAAI,GAAG,KAAX;;AACA,QAAIF,KAAK,CAACG,MAAN,KAAiB,CAArB,EAAwB;AACvBD,MAAAA,IAAI,GAAG,IAAP;AACA,KAFD,MAEO;AACN,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAAK,CAACG,MAA1B,EAAkCC,CAAC,EAAnC,EAAuC;AACtC,YAAIJ,KAAK,CAACI,CAAD,CAAL,KAAaP,UAAU,CAACQ,IAA5B,EAAkC;AACjCH,UAAAA,IAAI,GAAG,IAAP;AACA;AACA;AACD;AACD;;AAED,QAAIA,IAAJ,EAAU;AACT,0BACC;AAAA,gCACC,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAED,IAAnB;AAAyB,UAAA,SAAS,EAAEN;AAApC;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA,sBADD;AAMA,KAPD,MAOO;AACN,0BAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAP;AACA;AACD,GAvBD,MAuBO;AACN,QAAII,KAAK,KAAK,IAAd,EAAoB;AACnB,0BAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAP;AACA,KAFD,MAEO;AACN,0BAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AACA;AACD;AACD,CApCD;;KAAMN,a;;AAsCN,MAAMa,eAAe,GAAIC,KAAD,KAAY;AACnCX,EAAAA,IAAI,EAAEW,KAAK,CAACX;AADuB,CAAZ,CAAxB;;AAIA,eAAeL,OAAO,CAACe,eAAD,CAAP,CAAyBb,aAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Loading from '../layouts/Loading';\r\n\r\nconst PrivateRoutes = ({\r\n\tcomponent: Component,\r\n\tauth: { loggedUser, loading, token },\r\n\ttypes,\r\n\tpath,\r\n}) => {\r\n\tif (!loading && token) {\r\n\t\tlet pass = false;\r\n\t\tif (types.length === 0) {\r\n\t\t\tpass = true;\r\n\t\t} else {\r\n\t\t\tfor (let x = 0; x < types.length; x++) {\r\n\t\t\t\tif (types[x] === loggedUser.type) {\r\n\t\t\t\t\tpass = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (pass) {\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Loading />\r\n\t\t\t\t\t<Route exact path={path} component={Component} />\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn <Redirect to='/' />;\r\n\t\t}\r\n\t} else {\r\n\t\tif (token === null) {\r\n\t\t\treturn <Redirect to='/login' />;\r\n\t\t} else {\r\n\t\t\treturn <Loading />;\r\n\t\t}\r\n\t}\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tauth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoutes);\r\n"]},"metadata":{},"sourceType":"module"}