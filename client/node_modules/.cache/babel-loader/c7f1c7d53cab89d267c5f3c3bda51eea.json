{"ast":null,"code":"import api from '../utils/api';\nimport history from '../utils/history';\nimport { AUTH_ERROR, LOGIN_FAIL, LOGIN_SUCCESS, LOGOUT, EMAILAUTH_SENT, USERAUTH_LOADED, SIGNUP_FAIL, SIGNUP_SUCCESS, REMOVEAUTH_ERROR, PASSWORD_CHANGED, EMAIL_ERROR } from './types';\nimport { setAlert } from './alert'; //import { updateLoadingSpinner } from \"./mixvalues\";\n\nexport const loadUser = login => async dispatch => {\n  try {\n    const res = await api.get('/user/info');\n    dispatch({\n      type: USERAUTH_LOADED,\n      payload: res.data\n    });\n\n    if (login) {\n      if (res.data.type === 'admin') history.push('/dashboard');else history.push('/');\n    }\n  } catch (err) {\n    dispatch(setAlert(err.response.data.msg, 'danger', '2'));\n    dispatch({\n      type: AUTH_ERROR,\n      payload: {\n        type: err.response.statusText,\n        status: err.response.status,\n        msg: err.response.data.msg\n      }\n    });\n  }\n};\nexport const loginUser = formData => async dispatch => {\n  //dispatch(updateLoadingSpinner(true));\n  try {\n    const res = await api.post('/auth', formData);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser(true));\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => {\n        dispatch(setAlert(error.msg, 'danger', '2'));\n      });\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: errors\n      });\n    } else {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: {\n          type: err.response.statusText,\n          status: err.response.status,\n          msg: err.response.data.msg\n        }\n      });\n    }\n\n    window.scrollTo(0, 0);\n  } //dispatch(updateLoadingSpinner(false));\n\n};\nexport const facebookLogin = fbkData => async dispatch => {\n  //dispatch(updateLoadingSpinner(true));\n  try {\n    const res = await api.post('/auth/facebooklogin', fbkData);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser(true));\n  } catch (err) {\n    dispatch(setAlert(err.response.data.msg, 'danger', '2'));\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: {\n        type: err.response.statusText,\n        status: err.response.status,\n        msg: err.response.data.msg\n      }\n    });\n    window.scrollTo(0, 0);\n  } //dispatch(updateLoadingSpinner(false));\n\n};\nexport const googleLogin = googleData => async dispatch => {\n  //dispatch(updateLoadingSpinner(true));\n  try {\n    const res = await api.post('/auth/googlelogin', googleData);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser(true));\n  } catch (err) {\n    dispatch(setAlert(err.response.data.msg, 'danger', '2'));\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: {\n        type: err.response.statusText,\n        status: err.response.status,\n        msg: err.response.data.msg\n      }\n    });\n    window.scrollTo(0, 0);\n  } //dispatch(updateLoadingSpinner(false));\n\n};\nexport const signup = formData => async dispatch => {\n  //dispatch(updateLoadingSpinner(true));\n  try {\n    if (formData.formImg) await api.post('/user/upload-img', formData.formImg);\n    await api.post('/auth/signup', formData);\n    dispatch({\n      type: EMAILAUTH_SENT\n    });\n  } catch (err) {\n    if (err.response.data.errors) {\n      const errors = err.response.data.errors;\n      errors.forEach(error => {\n        dispatch(setAlert(error.msg, 'danger', '2'));\n      });\n      dispatch({\n        type: SIGNUP_FAIL,\n        payload: errors\n      });\n    } else {\n      dispatch(setAlert(err.response.data.msg, 'danger', '2'));\n      dispatch({\n        type: SIGNUP_FAIL,\n        payload: {\n          type: err.response.statusText,\n          status: err.response.status,\n          msg: err.response.data.msg\n        }\n      });\n    }\n\n    window.scrollTo(0, 0);\n  } //dispatch(updateLoadingSpinner(false));\n\n};\nexport const sendPasswordLink = email => async dispatch => {\n  //dispatch(updateLoadingSpinner(true));\n  try {\n    const res = await api.put('/auth/password', {\n      email\n    });\n    dispatch({\n      type: EMAILAUTH_SENT\n    });\n    dispatch(setAlert(res.data.msg, 'success', '2'));\n  } catch (err) {\n    if (err.response.data.errors) {\n      const errors = err.response.data.errors;\n      errors.forEach(error => {\n        dispatch(setAlert(error.msg, 'danger', '2'));\n      });\n      dispatch({\n        type: SIGNUP_FAIL,\n        payload: errors\n      });\n    } else {\n      dispatch(setAlert(err.response.data.msg, 'danger', '2'));\n      dispatch({\n        type: SIGNUP_FAIL,\n        payload: {\n          type: err.response.statusText,\n          status: err.response.status,\n          msg: err.response.data.msg\n        }\n      });\n    }\n\n    window.scrollTo(0, 0);\n  } //dispatch(updateLoadingSpinner(false));\n\n};\nexport const resetPassword = formData => async dispatch => {\n  //dispatch(updateLoadingSpinner(true));\n  try {\n    const res = await api.put('/auth/reset-password', formData);\n    dispatch({\n      type: PASSWORD_CHANGED,\n      payload: res.data\n    });\n\n    switch (res.data.type) {\n      case 'customer':\n        history.push('/vessels');\n        break;\n\n      default:\n        history.push('/');\n        break;\n    } //dispatch(setAlert('Password successfully changed', 'success', '1'));\n\n  } catch (err) {\n    if (err.response.data.errors) {\n      const errors = err.response.data.errors;\n      errors.forEach(error => {\n        dispatch(setAlert(error.msg, 'danger', '2'));\n      });\n      dispatch({\n        type: SIGNUP_FAIL,\n        payload: errors\n      });\n    } else {\n      dispatch(setAlert(err.response.data.msg, 'danger', '2'));\n      dispatch({\n        type: SIGNUP_FAIL,\n        payload: {\n          type: err.response.statusText,\n          status: err.response.status,\n          msg: err.response.data.msg\n        }\n      });\n    }\n\n    window.scrollTo(0, 0);\n  } //dispatch(updateLoadingSpinner(false));\n\n};\nexport const activation = token => async dispatch => {\n  //dispatch(updateLoadingSpinner(true));\n  try {\n    const res = await api.post('/auth/activation', {\n      token\n    });\n    dispatch({\n      type: SIGNUP_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: SIGNUP_FAIL,\n      payload: {\n        type: err.response.statusText,\n        status: err.response.status,\n        msg: err.response.data.msg\n      }\n    });\n    window.scrollTo(0, 0);\n  } //dispatch(updateLoadingSpinner(false));\n\n};\nexport const sendEmail = formData => async dispatch => {\n  //dispatch(updateLoadingSpinner(true));\n  try {\n    await api.post('/auth/send-email', formData);\n    dispatch({\n      type: EMAILAUTH_SENT\n    });\n    dispatch(setAlert('Email Sent', 'success', '2'));\n  } catch (err) {\n    if (err.response.data.errors) {\n      const errors = err.response.data.errors;\n      errors.forEach(error => {\n        dispatch(setAlert(error.msg, 'danger', '2'));\n      });\n      dispatch({\n        type: EMAIL_ERROR,\n        payload: errors\n      });\n    } else {\n      dispatch(setAlert(err.response.data.msg, 'danger', '2'));\n      dispatch({\n        type: EMAIL_ERROR,\n        payload: {\n          type: err.response.statusText,\n          status: err.response.status,\n          msg: err.response.data.msg\n        }\n      });\n    }\n  } //dispatch(updateLoadingSpinner(false));\n\n};\nexport const logOut = () => dispatch => {\n  dispatch({\n    type: LOGOUT\n  });\n  history.push('/login');\n};","map":{"version":3,"sources":["C:/Users/melig/OneDrive/Escritorio/prog/Tahoe-drone backend/client/src/actions/auth.js"],"names":["api","history","AUTH_ERROR","LOGIN_FAIL","LOGIN_SUCCESS","LOGOUT","EMAILAUTH_SENT","USERAUTH_LOADED","SIGNUP_FAIL","SIGNUP_SUCCESS","REMOVEAUTH_ERROR","PASSWORD_CHANGED","EMAIL_ERROR","setAlert","loadUser","login","dispatch","res","get","type","payload","data","push","err","response","msg","statusText","status","loginUser","formData","post","errors","forEach","error","window","scrollTo","facebookLogin","fbkData","googleLogin","googleData","signup","formImg","sendPasswordLink","email","put","resetPassword","activation","token","console","log","sendEmail","logOut"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,SACCC,UADD,EAECC,UAFD,EAGCC,aAHD,EAICC,MAJD,EAKCC,cALD,EAMCC,eAND,EAOCC,WAPD,EAQCC,cARD,EASCC,gBATD,EAUCC,gBAVD,EAWCC,WAXD,QAYO,SAZP;AAcA,SAASC,QAAT,QAAyB,SAAzB,C,CACA;;AAEA,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAW,MAAOC,QAAP,IAAoB;AACtD,MAAI;AACH,UAAMC,GAAG,GAAG,MAAMjB,GAAG,CAACkB,GAAJ,CAAQ,YAAR,CAAlB;AACAF,IAAAA,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAEZ,eADE;AAERa,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFL,KAAD,CAAR;;AAKA,QAAIN,KAAJ,EAAW;AACV,UAAIE,GAAG,CAACI,IAAJ,CAASF,IAAT,KAAkB,OAAtB,EAA+BlB,OAAO,CAACqB,IAAR,CAAa,YAAb,EAA/B,KACKrB,OAAO,CAACqB,IAAR,CAAa,GAAb;AACL;AACD,GAXD,CAWE,OAAOC,GAAP,EAAY;AACbP,IAAAA,QAAQ,CAACH,QAAQ,CAACU,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBI,GAAnB,EAAwB,QAAxB,EAAkC,GAAlC,CAAT,CAAR;AACAT,IAAAA,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAEjB,UADE;AAERkB,MAAAA,OAAO,EAAE;AACRD,QAAAA,IAAI,EAAEI,GAAG,CAACC,QAAJ,CAAaE,UADX;AAERC,QAAAA,MAAM,EAAEJ,GAAG,CAACC,QAAJ,CAAaG,MAFb;AAGRF,QAAAA,GAAG,EAAEF,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBI;AAHf;AAFD,KAAD,CAAR;AAQA;AACD,CAvBM;AAyBP,OAAO,MAAMG,SAAS,GAAIC,QAAD,IAAc,MAAOb,QAAP,IAAoB;AAC1D;AACA,MAAI;AACH,UAAMC,GAAG,GAAG,MAAMjB,GAAG,CAAC8B,IAAJ,CAAS,OAAT,EAAkBD,QAAlB,CAAlB;AACAb,IAAAA,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAEf,aADE;AAERgB,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFL,KAAD,CAAR;AAKAL,IAAAA,QAAQ,CAACF,QAAQ,CAAC,IAAD,CAAT,CAAR;AACA,GARD,CAQE,OAAOS,GAAP,EAAY;AACb,UAAMQ,MAAM,GAAGR,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBU,MAAjC;;AAEA,QAAIA,MAAJ,EAAY;AACXA,MAAAA,MAAM,CAACC,OAAP,CAAgBC,KAAD,IAAW;AACzBjB,QAAAA,QAAQ,CAACH,QAAQ,CAACoB,KAAK,CAACR,GAAP,EAAY,QAAZ,EAAsB,GAAtB,CAAT,CAAR;AACA,OAFD;AAGAT,MAAAA,QAAQ,CAAC;AACRG,QAAAA,IAAI,EAAEhB,UADE;AAERiB,QAAAA,OAAO,EAAEW;AAFD,OAAD,CAAR;AAIA,KARD,MAQO;AACNf,MAAAA,QAAQ,CAAC;AACRG,QAAAA,IAAI,EAAEhB,UADE;AAERiB,QAAAA,OAAO,EAAE;AACRD,UAAAA,IAAI,EAAEI,GAAG,CAACC,QAAJ,CAAaE,UADX;AAERC,UAAAA,MAAM,EAAEJ,GAAG,CAACC,QAAJ,CAAaG,MAFb;AAGRF,UAAAA,GAAG,EAAEF,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBI;AAHf;AAFD,OAAD,CAAR;AAQA;;AACDS,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACA,GAhCyD,CAiC1D;;AACA,CAlCM;AAoCP,OAAO,MAAMC,aAAa,GAAIC,OAAD,IAAa,MAAOrB,QAAP,IAAoB;AAC7D;AAEA,MAAI;AACH,UAAMC,GAAG,GAAG,MAAMjB,GAAG,CAAC8B,IAAJ,CAAS,qBAAT,EAAgCO,OAAhC,CAAlB;AAEArB,IAAAA,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAEf,aADE;AAERgB,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFL,KAAD,CAAR;AAKAL,IAAAA,QAAQ,CAACF,QAAQ,CAAC,IAAD,CAAT,CAAR;AACA,GATD,CASE,OAAOS,GAAP,EAAY;AACbP,IAAAA,QAAQ,CAACH,QAAQ,CAACU,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBI,GAAnB,EAAwB,QAAxB,EAAkC,GAAlC,CAAT,CAAR;AACAT,IAAAA,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAEhB,UADE;AAERiB,MAAAA,OAAO,EAAE;AACRD,QAAAA,IAAI,EAAEI,GAAG,CAACC,QAAJ,CAAaE,UADX;AAERC,QAAAA,MAAM,EAAEJ,GAAG,CAACC,QAAJ,CAAaG,MAFb;AAGRF,QAAAA,GAAG,EAAEF,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBI;AAHf;AAFD,KAAD,CAAR;AASAS,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACA,GAxB4D,CA0B7D;;AACA,CA3BM;AA6BP,OAAO,MAAMG,WAAW,GAAIC,UAAD,IAAgB,MAAOvB,QAAP,IAAoB;AAC9D;AAEA,MAAI;AACH,UAAMC,GAAG,GAAG,MAAMjB,GAAG,CAAC8B,IAAJ,CAAS,mBAAT,EAA8BS,UAA9B,CAAlB;AAEAvB,IAAAA,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAEf,aADE;AAERgB,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFL,KAAD,CAAR;AAKAL,IAAAA,QAAQ,CAACF,QAAQ,CAAC,IAAD,CAAT,CAAR;AACA,GATD,CASE,OAAOS,GAAP,EAAY;AACbP,IAAAA,QAAQ,CAACH,QAAQ,CAACU,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBI,GAAnB,EAAwB,QAAxB,EAAkC,GAAlC,CAAT,CAAR;AACAT,IAAAA,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAEhB,UADE;AAERiB,MAAAA,OAAO,EAAE;AACRD,QAAAA,IAAI,EAAEI,GAAG,CAACC,QAAJ,CAAaE,UADX;AAERC,QAAAA,MAAM,EAAEJ,GAAG,CAACC,QAAJ,CAAaG,MAFb;AAGRF,QAAAA,GAAG,EAAEF,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBI;AAHf;AAFD,KAAD,CAAR;AASAS,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACA,GAxB6D,CA0B9D;;AACA,CA3BM;AA6BP,OAAO,MAAMK,MAAM,GAAIX,QAAD,IAAc,MAAOb,QAAP,IAAoB;AACvD;AAEA,MAAI;AACH,QAAIa,QAAQ,CAACY,OAAb,EAAsB,MAAMzC,GAAG,CAAC8B,IAAJ,CAAS,kBAAT,EAA6BD,QAAQ,CAACY,OAAtC,CAAN;AAEtB,UAAMzC,GAAG,CAAC8B,IAAJ,CAAS,cAAT,EAAyBD,QAAzB,CAAN;AAEAb,IAAAA,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAEb;AADE,KAAD,CAAR;AAGA,GARD,CAQE,OAAOiB,GAAP,EAAY;AACb,QAAIA,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBU,MAAtB,EAA8B;AAC7B,YAAMA,MAAM,GAAGR,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBU,MAAjC;AACAA,MAAAA,MAAM,CAACC,OAAP,CAAgBC,KAAD,IAAW;AACzBjB,QAAAA,QAAQ,CAACH,QAAQ,CAACoB,KAAK,CAACR,GAAP,EAAY,QAAZ,EAAsB,GAAtB,CAAT,CAAR;AACA,OAFD;AAGAT,MAAAA,QAAQ,CAAC;AACRG,QAAAA,IAAI,EAAEX,WADE;AAERY,QAAAA,OAAO,EAAEW;AAFD,OAAD,CAAR;AAIA,KATD,MASO;AACNf,MAAAA,QAAQ,CAACH,QAAQ,CAACU,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBI,GAAnB,EAAwB,QAAxB,EAAkC,GAAlC,CAAT,CAAR;AACAT,MAAAA,QAAQ,CAAC;AACRG,QAAAA,IAAI,EAAEX,WADE;AAERY,QAAAA,OAAO,EAAE;AACRD,UAAAA,IAAI,EAAEI,GAAG,CAACC,QAAJ,CAAaE,UADX;AAERC,UAAAA,MAAM,EAAEJ,GAAG,CAACC,QAAJ,CAAaG,MAFb;AAGRF,UAAAA,GAAG,EAAEF,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBI;AAHf;AAFD,OAAD,CAAR;AAQA;;AAEDS,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACA,GAlCsD,CAoCvD;;AACA,CArCM;AAuCP,OAAO,MAAMO,gBAAgB,GAAIC,KAAD,IAAW,MAAO3B,QAAP,IAAoB;AAC9D;AAEA,MAAI;AACH,UAAMC,GAAG,GAAG,MAAMjB,GAAG,CAAC4C,GAAJ,CAAQ,gBAAR,EAA0B;AAAED,MAAAA;AAAF,KAA1B,CAAlB;AAEA3B,IAAAA,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAEb;AADE,KAAD,CAAR;AAIAU,IAAAA,QAAQ,CAACH,QAAQ,CAACI,GAAG,CAACI,IAAJ,CAASI,GAAV,EAAe,SAAf,EAA0B,GAA1B,CAAT,CAAR;AACA,GARD,CAQE,OAAOF,GAAP,EAAY;AACb,QAAIA,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBU,MAAtB,EAA8B;AAC7B,YAAMA,MAAM,GAAGR,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBU,MAAjC;AACAA,MAAAA,MAAM,CAACC,OAAP,CAAgBC,KAAD,IAAW;AACzBjB,QAAAA,QAAQ,CAACH,QAAQ,CAACoB,KAAK,CAACR,GAAP,EAAY,QAAZ,EAAsB,GAAtB,CAAT,CAAR;AACA,OAFD;AAGAT,MAAAA,QAAQ,CAAC;AACRG,QAAAA,IAAI,EAAEX,WADE;AAERY,QAAAA,OAAO,EAAEW;AAFD,OAAD,CAAR;AAIA,KATD,MASO;AACNf,MAAAA,QAAQ,CAACH,QAAQ,CAACU,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBI,GAAnB,EAAwB,QAAxB,EAAkC,GAAlC,CAAT,CAAR;AACAT,MAAAA,QAAQ,CAAC;AACRG,QAAAA,IAAI,EAAEX,WADE;AAERY,QAAAA,OAAO,EAAE;AACRD,UAAAA,IAAI,EAAEI,GAAG,CAACC,QAAJ,CAAaE,UADX;AAERC,UAAAA,MAAM,EAAEJ,GAAG,CAACC,QAAJ,CAAaG,MAFb;AAGRF,UAAAA,GAAG,EAAEF,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBI;AAHf;AAFD,OAAD,CAAR;AAQA;;AAEDS,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACA,GAlC6D,CAoC9D;;AACA,CArCM;AAuCP,OAAO,MAAMU,aAAa,GAAIhB,QAAD,IAAc,MAAOb,QAAP,IAAoB;AAC9D;AAEA,MAAI;AACH,UAAMC,GAAG,GAAG,MAAMjB,GAAG,CAAC4C,GAAJ,CAAQ,sBAAR,EAAgCf,QAAhC,CAAlB;AAEAb,IAAAA,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAER,gBADE;AAERS,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFL,KAAD,CAAR;;AAKA,YAAQJ,GAAG,CAACI,IAAJ,CAASF,IAAjB;AACC,WAAK,UAAL;AACClB,QAAAA,OAAO,CAACqB,IAAR,CAAa,UAAb;AACA;;AACD;AACCrB,QAAAA,OAAO,CAACqB,IAAR,CAAa,GAAb;AACA;AANF,KARG,CAiBH;;AACA,GAlBD,CAkBE,OAAOC,GAAP,EAAY;AACb,QAAIA,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBU,MAAtB,EAA8B;AAC7B,YAAMA,MAAM,GAAGR,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBU,MAAjC;AACAA,MAAAA,MAAM,CAACC,OAAP,CAAgBC,KAAD,IAAW;AACzBjB,QAAAA,QAAQ,CAACH,QAAQ,CAACoB,KAAK,CAACR,GAAP,EAAY,QAAZ,EAAsB,GAAtB,CAAT,CAAR;AACA,OAFD;AAGAT,MAAAA,QAAQ,CAAC;AACRG,QAAAA,IAAI,EAAEX,WADE;AAERY,QAAAA,OAAO,EAAEW;AAFD,OAAD,CAAR;AAIA,KATD,MASO;AACNf,MAAAA,QAAQ,CAACH,QAAQ,CAACU,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBI,GAAnB,EAAwB,QAAxB,EAAkC,GAAlC,CAAT,CAAR;AACAT,MAAAA,QAAQ,CAAC;AACRG,QAAAA,IAAI,EAAEX,WADE;AAERY,QAAAA,OAAO,EAAE;AACRD,UAAAA,IAAI,EAAEI,GAAG,CAACC,QAAJ,CAAaE,UADX;AAERC,UAAAA,MAAM,EAAEJ,GAAG,CAACC,QAAJ,CAAaG,MAFb;AAGRF,UAAAA,GAAG,EAAEF,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBI;AAHf;AAFD,OAAD,CAAR;AAQA;;AAEDS,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACA,GA5C6D,CA8C9D;;AACA,CA/CM;AAiDP,OAAO,MAAMW,UAAU,GAAIC,KAAD,IAAW,MAAO/B,QAAP,IAAoB;AACxD;AAEA,MAAI;AACH,UAAMC,GAAG,GAAG,MAAMjB,GAAG,CAAC8B,IAAJ,CAAS,kBAAT,EAA6B;AAAEiB,MAAAA;AAAF,KAA7B,CAAlB;AAEA/B,IAAAA,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAEV,cADE;AAERW,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFL,KAAD,CAAR;AAIA,GAPD,CAOE,OAAOE,GAAP,EAAY;AACbyB,IAAAA,OAAO,CAACC,GAAR,CAAY1B,GAAZ;AACAP,IAAAA,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAEX,WADE;AAERY,MAAAA,OAAO,EAAE;AACRD,QAAAA,IAAI,EAAEI,GAAG,CAACC,QAAJ,CAAaE,UADX;AAERC,QAAAA,MAAM,EAAEJ,GAAG,CAACC,QAAJ,CAAaG,MAFb;AAGRF,QAAAA,GAAG,EAAEF,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBI;AAHf;AAFD,KAAD,CAAR;AASAS,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACA,GAtBuD,CAwBxD;;AACA,CAzBM;AA2BP,OAAO,MAAMe,SAAS,GAAIrB,QAAD,IAAc,MAAOb,QAAP,IAAoB;AAC1D;AAEA,MAAI;AACH,UAAMhB,GAAG,CAAC8B,IAAJ,CAAS,kBAAT,EAA6BD,QAA7B,CAAN;AAEAb,IAAAA,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAEb;AADE,KAAD,CAAR;AAIAU,IAAAA,QAAQ,CAACH,QAAQ,CAAC,YAAD,EAAe,SAAf,EAA0B,GAA1B,CAAT,CAAR;AACA,GARD,CAQE,OAAOU,GAAP,EAAY;AACb,QAAIA,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBU,MAAtB,EAA8B;AAC7B,YAAMA,MAAM,GAAGR,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBU,MAAjC;AACAA,MAAAA,MAAM,CAACC,OAAP,CAAgBC,KAAD,IAAW;AACzBjB,QAAAA,QAAQ,CAACH,QAAQ,CAACoB,KAAK,CAACR,GAAP,EAAY,QAAZ,EAAsB,GAAtB,CAAT,CAAR;AACA,OAFD;AAGAT,MAAAA,QAAQ,CAAC;AACRG,QAAAA,IAAI,EAAEP,WADE;AAERQ,QAAAA,OAAO,EAAEW;AAFD,OAAD,CAAR;AAIA,KATD,MASO;AACNf,MAAAA,QAAQ,CAACH,QAAQ,CAACU,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBI,GAAnB,EAAwB,QAAxB,EAAkC,GAAlC,CAAT,CAAR;AACAT,MAAAA,QAAQ,CAAC;AACRG,QAAAA,IAAI,EAAEP,WADE;AAERQ,QAAAA,OAAO,EAAE;AACRD,UAAAA,IAAI,EAAEI,GAAG,CAACC,QAAJ,CAAaE,UADX;AAERC,UAAAA,MAAM,EAAEJ,GAAG,CAACC,QAAJ,CAAaG,MAFb;AAGRF,UAAAA,GAAG,EAAEF,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBI;AAHf;AAFD,OAAD,CAAR;AAQA;AACD,GAhCyD,CAkC1D;;AACA,CAnCM;AAqCP,OAAO,MAAM0B,MAAM,GAAG,MAAOnC,QAAD,IAAc;AACzCA,EAAAA,QAAQ,CAAC;AACRG,IAAAA,IAAI,EAAEd;AADE,GAAD,CAAR;AAGAJ,EAAAA,OAAO,CAACqB,IAAR,CAAa,QAAb;AACA,CALM","sourcesContent":["import api from '../utils/api';\r\nimport history from '../utils/history';\r\n\r\nimport {\r\n\tAUTH_ERROR,\r\n\tLOGIN_FAIL,\r\n\tLOGIN_SUCCESS,\r\n\tLOGOUT,\r\n\tEMAILAUTH_SENT,\r\n\tUSERAUTH_LOADED,\r\n\tSIGNUP_FAIL,\r\n\tSIGNUP_SUCCESS,\r\n\tREMOVEAUTH_ERROR,\r\n\tPASSWORD_CHANGED,\r\n\tEMAIL_ERROR,\r\n} from './types';\r\n\r\nimport { setAlert } from './alert';\r\n//import { updateLoadingSpinner } from \"./mixvalues\";\r\n\r\nexport const loadUser = (login) => async (dispatch) => {\r\n\ttry {\r\n\t\tconst res = await api.get('/user/info');\r\n\t\tdispatch({\r\n\t\t\ttype: USERAUTH_LOADED,\r\n\t\t\tpayload: res.data,\r\n\t\t});\r\n\r\n\t\tif (login) {\r\n\t\t\tif (res.data.type === 'admin') history.push('/dashboard');\r\n\t\t\telse history.push('/');\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tdispatch(setAlert(err.response.data.msg, 'danger', '2'));\r\n\t\tdispatch({\r\n\t\t\ttype: AUTH_ERROR,\r\n\t\t\tpayload: {\r\n\t\t\t\ttype: err.response.statusText,\r\n\t\t\t\tstatus: err.response.status,\r\n\t\t\t\tmsg: err.response.data.msg,\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const loginUser = (formData) => async (dispatch) => {\r\n\t//dispatch(updateLoadingSpinner(true));\r\n\ttry {\r\n\t\tconst res = await api.post('/auth', formData);\r\n\t\tdispatch({\r\n\t\t\ttype: LOGIN_SUCCESS,\r\n\t\t\tpayload: res.data,\r\n\t\t});\r\n\r\n\t\tdispatch(loadUser(true));\r\n\t} catch (err) {\r\n\t\tconst errors = err.response.data.errors;\r\n\r\n\t\tif (errors) {\r\n\t\t\terrors.forEach((error) => {\r\n\t\t\t\tdispatch(setAlert(error.msg, 'danger', '2'));\r\n\t\t\t});\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: LOGIN_FAIL,\r\n\t\t\t\tpayload: errors,\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: LOGIN_FAIL,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\ttype: err.response.statusText,\r\n\t\t\t\t\tstatus: err.response.status,\r\n\t\t\t\t\tmsg: err.response.data.msg,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t}\r\n\t\twindow.scrollTo(0, 0);\r\n\t}\r\n\t//dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const facebookLogin = (fbkData) => async (dispatch) => {\r\n\t//dispatch(updateLoadingSpinner(true));\r\n\r\n\ttry {\r\n\t\tconst res = await api.post('/auth/facebooklogin', fbkData);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: LOGIN_SUCCESS,\r\n\t\t\tpayload: res.data,\r\n\t\t});\r\n\r\n\t\tdispatch(loadUser(true));\r\n\t} catch (err) {\r\n\t\tdispatch(setAlert(err.response.data.msg, 'danger', '2'));\r\n\t\tdispatch({\r\n\t\t\ttype: LOGIN_FAIL,\r\n\t\t\tpayload: {\r\n\t\t\t\ttype: err.response.statusText,\r\n\t\t\t\tstatus: err.response.status,\r\n\t\t\t\tmsg: err.response.data.msg,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\twindow.scrollTo(0, 0);\r\n\t}\r\n\r\n\t//dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const googleLogin = (googleData) => async (dispatch) => {\r\n\t//dispatch(updateLoadingSpinner(true));\r\n\r\n\ttry {\r\n\t\tconst res = await api.post('/auth/googlelogin', googleData);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: LOGIN_SUCCESS,\r\n\t\t\tpayload: res.data,\r\n\t\t});\r\n\r\n\t\tdispatch(loadUser(true));\r\n\t} catch (err) {\r\n\t\tdispatch(setAlert(err.response.data.msg, 'danger', '2'));\r\n\t\tdispatch({\r\n\t\t\ttype: LOGIN_FAIL,\r\n\t\t\tpayload: {\r\n\t\t\t\ttype: err.response.statusText,\r\n\t\t\t\tstatus: err.response.status,\r\n\t\t\t\tmsg: err.response.data.msg,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\twindow.scrollTo(0, 0);\r\n\t}\r\n\r\n\t//dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const signup = (formData) => async (dispatch) => {\r\n\t//dispatch(updateLoadingSpinner(true));\r\n\r\n\ttry {\r\n\t\tif (formData.formImg) await api.post('/user/upload-img', formData.formImg);\r\n\r\n\t\tawait api.post('/auth/signup', formData);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: EMAILAUTH_SENT,\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tif (err.response.data.errors) {\r\n\t\t\tconst errors = err.response.data.errors;\r\n\t\t\terrors.forEach((error) => {\r\n\t\t\t\tdispatch(setAlert(error.msg, 'danger', '2'));\r\n\t\t\t});\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: SIGNUP_FAIL,\r\n\t\t\t\tpayload: errors,\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tdispatch(setAlert(err.response.data.msg, 'danger', '2'));\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: SIGNUP_FAIL,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\ttype: err.response.statusText,\r\n\t\t\t\t\tstatus: err.response.status,\r\n\t\t\t\t\tmsg: err.response.data.msg,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\twindow.scrollTo(0, 0);\r\n\t}\r\n\r\n\t//dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const sendPasswordLink = (email) => async (dispatch) => {\r\n\t//dispatch(updateLoadingSpinner(true));\r\n\r\n\ttry {\r\n\t\tconst res = await api.put('/auth/password', { email });\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: EMAILAUTH_SENT,\r\n\t\t});\r\n\r\n\t\tdispatch(setAlert(res.data.msg, 'success', '2'));\r\n\t} catch (err) {\r\n\t\tif (err.response.data.errors) {\r\n\t\t\tconst errors = err.response.data.errors;\r\n\t\t\terrors.forEach((error) => {\r\n\t\t\t\tdispatch(setAlert(error.msg, 'danger', '2'));\r\n\t\t\t});\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: SIGNUP_FAIL,\r\n\t\t\t\tpayload: errors,\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tdispatch(setAlert(err.response.data.msg, 'danger', '2'));\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: SIGNUP_FAIL,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\ttype: err.response.statusText,\r\n\t\t\t\t\tstatus: err.response.status,\r\n\t\t\t\t\tmsg: err.response.data.msg,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\twindow.scrollTo(0, 0);\r\n\t}\r\n\r\n\t//dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const resetPassword = (formData) => async (dispatch) => {\r\n\t//dispatch(updateLoadingSpinner(true));\r\n\r\n\ttry {\r\n\t\tconst res = await api.put('/auth/reset-password', formData);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: PASSWORD_CHANGED,\r\n\t\t\tpayload: res.data,\r\n\t\t});\r\n\r\n\t\tswitch (res.data.type) {\r\n\t\t\tcase 'customer':\r\n\t\t\t\thistory.push('/vessels');\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\thistory.push('/');\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\t//dispatch(setAlert('Password successfully changed', 'success', '1'));\r\n\t} catch (err) {\r\n\t\tif (err.response.data.errors) {\r\n\t\t\tconst errors = err.response.data.errors;\r\n\t\t\terrors.forEach((error) => {\r\n\t\t\t\tdispatch(setAlert(error.msg, 'danger', '2'));\r\n\t\t\t});\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: SIGNUP_FAIL,\r\n\t\t\t\tpayload: errors,\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tdispatch(setAlert(err.response.data.msg, 'danger', '2'));\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: SIGNUP_FAIL,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\ttype: err.response.statusText,\r\n\t\t\t\t\tstatus: err.response.status,\r\n\t\t\t\t\tmsg: err.response.data.msg,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\twindow.scrollTo(0, 0);\r\n\t}\r\n\r\n\t//dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const activation = (token) => async (dispatch) => {\r\n\t//dispatch(updateLoadingSpinner(true));\r\n\r\n\ttry {\r\n\t\tconst res = await api.post('/auth/activation', { token });\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: SIGNUP_SUCCESS,\r\n\t\t\tpayload: res.data,\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t\tdispatch({\r\n\t\t\ttype: SIGNUP_FAIL,\r\n\t\t\tpayload: {\r\n\t\t\t\ttype: err.response.statusText,\r\n\t\t\t\tstatus: err.response.status,\r\n\t\t\t\tmsg: err.response.data.msg,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\twindow.scrollTo(0, 0);\r\n\t}\r\n\r\n\t//dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const sendEmail = (formData) => async (dispatch) => {\r\n\t//dispatch(updateLoadingSpinner(true));\r\n\r\n\ttry {\r\n\t\tawait api.post('/auth/send-email', formData);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: EMAILAUTH_SENT,\r\n\t\t});\r\n\r\n\t\tdispatch(setAlert('Email Sent', 'success', '2'));\r\n\t} catch (err) {\r\n\t\tif (err.response.data.errors) {\r\n\t\t\tconst errors = err.response.data.errors;\r\n\t\t\terrors.forEach((error) => {\r\n\t\t\t\tdispatch(setAlert(error.msg, 'danger', '2'));\r\n\t\t\t});\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: EMAIL_ERROR,\r\n\t\t\t\tpayload: errors,\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tdispatch(setAlert(err.response.data.msg, 'danger', '2'));\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: EMAIL_ERROR,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\ttype: err.response.statusText,\r\n\t\t\t\t\tstatus: err.response.status,\r\n\t\t\t\t\tmsg: err.response.data.msg,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t//dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const logOut = () => (dispatch) => {\r\n\tdispatch({\r\n\t\ttype: LOGOUT,\r\n\t});\r\n\thistory.push('/login');\r\n};\r\n"]},"metadata":{},"sourceType":"module"}