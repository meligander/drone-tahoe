{"ast":null,"code":"import api from '../utils/api';\nimport history from '../utils/history';\nimport { RESERVATIONS_CLEARED, RESERVATIONS_ERROR, RESERVATIONS_LOADED, RESERVATION_DELETED, RESERVATION_LOADED, RESERVATION_REGISTERED, RESERVATION_UPDATED, RESERVATION_CLEARED } from './types';\nimport { setAlert } from './alert';\nimport { updateLoadingSpinner } from './global';\nexport const loadReservation = reservation_id => async dispatch => {\n  dispatch(updateLoadingSpinner(true));\n\n  try {\n    const res = await api.get(`/reservation/${reservation_id}`);\n    dispatch({\n      type: RESERVATION_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch(setAlert(err.response.data.msg, 'danger', '1'));\n    dispatch({\n      type: RESERVATIONS_ERROR,\n      payload: {\n        type: err.response.statusText,\n        status: err.response.status,\n        msg: err.response.data.msg\n      }\n    });\n    window.scrollTo(0, 0);\n  }\n\n  dispatch(updateLoadingSpinner(false));\n};\nexport const loadReservations = (filterData, bulkLoad) => async dispatch => {\n  if (!bulkLoad) dispatch(updateLoadingSpinner(true));\n  let filter = '';\n  const filternames = Object.keys(filterData);\n\n  for (let x = 0; x < filternames.length; x++) {\n    const name = filternames[x];\n\n    if (filterData[name] !== '') {\n      if (filter !== '') filter = filter + '&';\n      filter = filter + filternames[x] + '=' + filterData[name];\n    }\n  }\n\n  try {\n    const res = await api.get(`/reservation?${filter}`);\n    dispatch({\n      type: RESERVATIONS_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    if (!bulkLoad) dispatch(setAlert(err.response.data.msg, 'danger', '1'));\n    dispatch({\n      type: RESERVATIONS_ERROR,\n      payload: {\n        type: err.response.statusText,\n        status: err.response.status,\n        msg: err.response.data.msg\n      }\n    });\n    if (!bulkLoad) window.scrollTo(0, 0);\n  }\n\n  dispatch(updateLoadingSpinner(false));\n};\nexport const registerReservation = (formData, admin) => async dispatch => {\n  dispatch(updateLoadingSpinner(true));\n\n  if (formData.user === '') {\n    history.push('/login');\n    dispatch(setAlert('You must login or signup before making a reservation', 'danger', '1'));\n  } else {\n    try {\n      let res = await api.post('/reservation', formData);\n      dispatch({\n        type: RESERVATION_REGISTERED,\n        payload: res.data\n      });\n      if (admin) history.push('/reservations-list/');\n      dispatch(setAlert('Reservation Registered', 'success', '1'));\n      window.scrollTo(0, 0);\n    } catch (err) {\n      if (err.response.data.errors) {\n        const errors = err.response.data.errors;\n        errors.forEach(error => {\n          dispatch(setAlert(error.msg, 'danger', '2'));\n        });\n        dispatch({\n          type: RESERVATIONS_ERROR,\n          payload: errors\n        });\n      } else {\n        dispatch(setAlert(err.response.data.msg, 'danger', '2'));\n        dispatch({\n          type: RESERVATIONS_ERROR,\n          payload: {\n            type: err.response.statusText,\n            status: err.response.status,\n            msg: err.response.data.msg\n          }\n        });\n      }\n    }\n  }\n\n  dispatch(updateLoadingSpinner(false));\n};\nexport const updateReservation = (formData, reservation_id, type) => async dispatch => {\n  dispatch(updateLoadingSpinner(true));\n\n  try {\n    let res = await api.put(`/reservation/${reservation_id}`, formData);\n    dispatch({\n      type: RESERVATION_UPDATED,\n      payload: res.data\n    });\n    if (type === 'admin') history.push('/reservations-list');\n    dispatch(setAlert('Reservation Updated', 'success', '1'));\n    window.scrollTo(0, 0);\n  } catch (err) {\n    if (err.response.data.errors) {\n      const errors = err.response.data.errors;\n      errors.forEach(error => {\n        dispatch(setAlert(error.msg, 'danger', '2'));\n      });\n      dispatch({\n        type: RESERVATIONS_ERROR,\n        payload: errors\n      });\n    } else {\n      dispatch(setAlert(err.response.data.msg, 'danger', '2'));\n      dispatch({\n        type: RESERVATIONS_ERROR,\n        payload: {\n          type: err.response.statusText,\n          status: err.response.status,\n          msg: err.response.data.msg\n        }\n      });\n    }\n  }\n\n  dispatch(updateLoadingSpinner(false));\n};\nexport const deleteReservation = reservation_id => async dispatch => {\n  dispatch(updateLoadingSpinner(true));\n\n  try {\n    await api.delete(`/reservation/${reservation_id}`);\n    dispatch({\n      type: RESERVATION_DELETED,\n      payload: reservation_id\n    });\n    dispatch(setAlert('Reservation Deleted', 'success', '1'));\n  } catch (err) {\n    dispatch(setAlert(err.response.data.msg, 'danger', '1'));\n    dispatch({\n      type: RESERVATIONS_ERROR,\n      payload: {\n        type: err.response.statusText,\n        status: err.response.status,\n        msg: err.response.data.msg\n      }\n    });\n  }\n\n  window.scrollTo(0, 0);\n  dispatch(updateLoadingSpinner(false));\n};\nexport const clearReservation = () => dispatch => {\n  dispatch({\n    type: RESERVATION_CLEARED\n  });\n};\nexport const clearReservations = () => dispatch => {\n  dispatch({\n    type: RESERVATIONS_CLEARED\n  });\n};","map":{"version":3,"sources":["C:/Users/melig/OneDrive/Escritorio/prog/Tahoe-drone backend/client/src/actions/reservation.js"],"names":["api","history","RESERVATIONS_CLEARED","RESERVATIONS_ERROR","RESERVATIONS_LOADED","RESERVATION_DELETED","RESERVATION_LOADED","RESERVATION_REGISTERED","RESERVATION_UPDATED","RESERVATION_CLEARED","setAlert","updateLoadingSpinner","loadReservation","reservation_id","dispatch","res","get","type","payload","data","err","response","msg","statusText","status","window","scrollTo","loadReservations","filterData","bulkLoad","filter","filternames","Object","keys","x","length","name","registerReservation","formData","admin","user","push","post","errors","forEach","error","updateReservation","put","deleteReservation","delete","clearReservation","clearReservations"],"mappings":"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","sourcesContent":["import api from '../utils/api';\r\nimport history from '../utils/history';\r\n\r\nimport {\r\n\tRESERVATIONS_CLEARED,\r\n\tRESERVATIONS_ERROR,\r\n\tRESERVATIONS_LOADED,\r\n\tRESERVATION_DELETED,\r\n\tRESERVATION_LOADED,\r\n\tRESERVATION_REGISTERED,\r\n\tRESERVATION_UPDATED,\r\n\tRESERVATION_CLEARED,\r\n} from './types';\r\n\r\nimport { setAlert } from './alert';\r\nimport { updateLoadingSpinner } from './global';\r\n\r\nexport const loadReservation = (reservation_id) => async (dispatch) => {\r\n\tdispatch(updateLoadingSpinner(true));\r\n\r\n\ttry {\r\n\t\tconst res = await api.get(`/reservation/${reservation_id}`);\r\n\t\tdispatch({\r\n\t\t\ttype: RESERVATION_LOADED,\r\n\t\t\tpayload: res.data,\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch(setAlert(err.response.data.msg, 'danger', '1'));\r\n\t\tdispatch({\r\n\t\t\ttype: RESERVATIONS_ERROR,\r\n\t\t\tpayload: {\r\n\t\t\t\ttype: err.response.statusText,\r\n\t\t\t\tstatus: err.response.status,\r\n\t\t\t\tmsg: err.response.data.msg,\r\n\t\t\t},\r\n\t\t});\r\n\t\twindow.scrollTo(0, 0);\r\n\t}\r\n\r\n\tdispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadReservations = (filterData, bulkLoad) => async (dispatch) => {\r\n\tif (!bulkLoad) dispatch(updateLoadingSpinner(true));\r\n\r\n\tlet filter = '';\r\n\tconst filternames = Object.keys(filterData);\r\n\tfor (let x = 0; x < filternames.length; x++) {\r\n\t\tconst name = filternames[x];\r\n\t\tif (filterData[name] !== '') {\r\n\t\t\tif (filter !== '') filter = filter + '&';\r\n\t\t\tfilter = filter + filternames[x] + '=' + filterData[name];\r\n\t\t}\r\n\t}\r\n\ttry {\r\n\t\tconst res = await api.get(`/reservation?${filter}`);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: RESERVATIONS_LOADED,\r\n\t\t\tpayload: res.data,\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tif (!bulkLoad) dispatch(setAlert(err.response.data.msg, 'danger', '1'));\r\n\t\tdispatch({\r\n\t\t\ttype: RESERVATIONS_ERROR,\r\n\t\t\tpayload: {\r\n\t\t\t\ttype: err.response.statusText,\r\n\t\t\t\tstatus: err.response.status,\r\n\t\t\t\tmsg: err.response.data.msg,\r\n\t\t\t},\r\n\t\t});\r\n\t\tif (!bulkLoad) window.scrollTo(0, 0);\r\n\t}\r\n\r\n\tdispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const registerReservation = (formData, admin) => async (dispatch) => {\r\n\tdispatch(updateLoadingSpinner(true));\r\n\tif (formData.user === '') {\r\n\t\thistory.push('/login');\r\n\t\tdispatch(\r\n\t\t\tsetAlert(\r\n\t\t\t\t'You must login or signup before making a reservation',\r\n\t\t\t\t'danger',\r\n\t\t\t\t'1'\r\n\t\t\t)\r\n\t\t);\r\n\t} else {\r\n\t\ttry {\r\n\t\t\tlet res = await api.post('/reservation', formData);\r\n\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: RESERVATION_REGISTERED,\r\n\t\t\t\tpayload: res.data,\r\n\t\t\t});\r\n\r\n\t\t\tif (admin) history.push('/reservations-list/');\r\n\t\t\tdispatch(setAlert('Reservation Registered', 'success', '1'));\r\n\t\t\twindow.scrollTo(0, 0);\r\n\t\t} catch (err) {\r\n\t\t\tif (err.response.data.errors) {\r\n\t\t\t\tconst errors = err.response.data.errors;\r\n\t\t\t\terrors.forEach((error) => {\r\n\t\t\t\t\tdispatch(setAlert(error.msg, 'danger', '2'));\r\n\t\t\t\t});\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: RESERVATIONS_ERROR,\r\n\t\t\t\t\tpayload: errors,\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tdispatch(setAlert(err.response.data.msg, 'danger', '2'));\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: RESERVATIONS_ERROR,\r\n\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\ttype: err.response.statusText,\r\n\t\t\t\t\t\tstatus: err.response.status,\r\n\t\t\t\t\t\tmsg: err.response.data.msg,\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tdispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const updateReservation =\r\n\t(formData, reservation_id, type) => async (dispatch) => {\r\n\t\tdispatch(updateLoadingSpinner(true));\r\n\t\ttry {\r\n\t\t\tlet res = await api.put(`/reservation/${reservation_id}`, formData);\r\n\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: RESERVATION_UPDATED,\r\n\t\t\t\tpayload: res.data,\r\n\t\t\t});\r\n\r\n\t\t\tif (type === 'admin') history.push('/reservations-list');\r\n\r\n\t\t\tdispatch(setAlert('Reservation Updated', 'success', '1'));\r\n\t\t\twindow.scrollTo(0, 0);\r\n\t\t} catch (err) {\r\n\t\t\tif (err.response.data.errors) {\r\n\t\t\t\tconst errors = err.response.data.errors;\r\n\t\t\t\terrors.forEach((error) => {\r\n\t\t\t\t\tdispatch(setAlert(error.msg, 'danger', '2'));\r\n\t\t\t\t});\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: RESERVATIONS_ERROR,\r\n\t\t\t\t\tpayload: errors,\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tdispatch(setAlert(err.response.data.msg, 'danger', '2'));\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: RESERVATIONS_ERROR,\r\n\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\ttype: err.response.statusText,\r\n\t\t\t\t\t\tstatus: err.response.status,\r\n\t\t\t\t\t\tmsg: err.response.data.msg,\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdispatch(updateLoadingSpinner(false));\r\n\t};\r\n\r\nexport const deleteReservation = (reservation_id) => async (dispatch) => {\r\n\tdispatch(updateLoadingSpinner(true));\r\n\r\n\ttry {\r\n\t\tawait api.delete(`/reservation/${reservation_id}`);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: RESERVATION_DELETED,\r\n\t\t\tpayload: reservation_id,\r\n\t\t});\r\n\r\n\t\tdispatch(setAlert('Reservation Deleted', 'success', '1'));\r\n\t} catch (err) {\r\n\t\tdispatch(setAlert(err.response.data.msg, 'danger', '1'));\r\n\t\tdispatch({\r\n\t\t\ttype: RESERVATIONS_ERROR,\r\n\t\t\tpayload: {\r\n\t\t\t\ttype: err.response.statusText,\r\n\t\t\t\tstatus: err.response.status,\r\n\t\t\t\tmsg: err.response.data.msg,\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\r\n\twindow.scrollTo(0, 0);\r\n\tdispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const clearReservation = () => (dispatch) => {\r\n\tdispatch({ type: RESERVATION_CLEARED });\r\n};\r\n\r\nexport const clearReservations = () => (dispatch) => {\r\n\tdispatch({ type: RESERVATIONS_CLEARED });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}