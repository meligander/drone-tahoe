{"ast":null,"code":"import { JOB_LOADED, JOBS_LOADED, JOB_REGISTERED, JOB_UPDATED, JOB_DELETED, JOBS_ERROR, JOBS_CLEARED, JOB_CLEARED } from '../actions/types';\nconst initialState = {\n  loading: true,\n  loadingJob: true,\n  job: null,\n  jobs: [],\n  error: {}\n};\n\nconst jobReducer = (state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case JOB_LOADED:\n      return { ...state,\n        loadingJob: false,\n        job: payload,\n        error: {}\n      };\n\n    case JOBS_LOADED:\n      return { ...state,\n        loading: false,\n        jobs: payload,\n        error: {}\n      };\n\n    case JOB_REGISTERED:\n      return { ...state,\n        loading: false,\n        jobs: [...state.jobs, payload],\n        error: {}\n      };\n\n    case JOB_UPDATED:\n      return { ...state,\n        loading: false,\n        job: payload,\n        loadingJob: false,\n        jobs: state.jobs.map(item => item.id !== payload.id ? item : payload),\n        error: {}\n      };\n\n    case JOB_DELETED:\n      return { ...state,\n        jobs: state.jobs.filter(item => item.id !== payload),\n        loading: false,\n        error: {}\n      };\n\n    case JOBS_CLEARED:\n      return initialState;\n\n    case JOB_CLEARED:\n      return { ...state,\n        job: null,\n        loadingJob: true\n      };\n\n    case JOBS_ERROR:\n      return { ...state,\n        job: null,\n        jobs: [],\n        loading: false,\n        loadingJob: false,\n        error: payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default jobReducer;","map":{"version":3,"sources":["C:/Users/melig/OneDrive/Escritorio/prog/Tahoe-drone backend/client/src/reducers/job.js"],"names":["JOB_LOADED","JOBS_LOADED","JOB_REGISTERED","JOB_UPDATED","JOB_DELETED","JOBS_ERROR","JOBS_CLEARED","JOB_CLEARED","initialState","loading","loadingJob","job","jobs","error","jobReducer","state","action","type","payload","map","item","id","filter"],"mappings":"AAAA,SACCA,UADD,EAECC,WAFD,EAGCC,cAHD,EAICC,WAJD,EAKCC,WALD,EAMCC,UAND,EAOCC,YAPD,EAQCC,WARD,QASO,kBATP;AAWA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,OAAO,EAAE,IADW;AAEpBC,EAAAA,UAAU,EAAE,IAFQ;AAGpBC,EAAAA,GAAG,EAAE,IAHe;AAIpBC,EAAAA,IAAI,EAAE,EAJc;AAKpBC,EAAAA,KAAK,EAAE;AALa,CAArB;;AAQA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AACpD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAQC,IAAR;AACC,SAAKjB,UAAL;AACC,aAAO,EACN,GAAGe,KADG;AAENL,QAAAA,UAAU,EAAE,KAFN;AAGNC,QAAAA,GAAG,EAAEO,OAHC;AAINL,QAAAA,KAAK,EAAE;AAJD,OAAP;;AAMD,SAAKZ,WAAL;AACC,aAAO,EACN,GAAGc,KADG;AAENN,QAAAA,OAAO,EAAE,KAFH;AAGNG,QAAAA,IAAI,EAAEM,OAHA;AAINL,QAAAA,KAAK,EAAE;AAJD,OAAP;;AAMD,SAAKX,cAAL;AACC,aAAO,EACN,GAAGa,KADG;AAENN,QAAAA,OAAO,EAAE,KAFH;AAGNG,QAAAA,IAAI,EAAE,CAAC,GAAGG,KAAK,CAACH,IAAV,EAAgBM,OAAhB,CAHA;AAINL,QAAAA,KAAK,EAAE;AAJD,OAAP;;AAMD,SAAKV,WAAL;AACC,aAAO,EACN,GAAGY,KADG;AAENN,QAAAA,OAAO,EAAE,KAFH;AAGNE,QAAAA,GAAG,EAAEO,OAHC;AAINR,QAAAA,UAAU,EAAE,KAJN;AAKNE,QAAAA,IAAI,EAAEG,KAAK,CAACH,IAAN,CAAWO,GAAX,CAAgBC,IAAD,IACpBA,IAAI,CAACC,EAAL,KAAYH,OAAO,CAACG,EAApB,GAAyBD,IAAzB,GAAgCF,OAD3B,CALA;AAQNL,QAAAA,KAAK,EAAE;AARD,OAAP;;AAUD,SAAKT,WAAL;AACC,aAAO,EACN,GAAGW,KADG;AAENH,QAAAA,IAAI,EAAEG,KAAK,CAACH,IAAN,CAAWU,MAAX,CAAmBF,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYH,OAAxC,CAFA;AAGNT,QAAAA,OAAO,EAAE,KAHH;AAINI,QAAAA,KAAK,EAAE;AAJD,OAAP;;AAMD,SAAKP,YAAL;AACC,aAAOE,YAAP;;AACD,SAAKD,WAAL;AACC,aAAO,EACN,GAAGQ,KADG;AAENJ,QAAAA,GAAG,EAAE,IAFC;AAGND,QAAAA,UAAU,EAAE;AAHN,OAAP;;AAKD,SAAKL,UAAL;AACC,aAAO,EACN,GAAGU,KADG;AAENJ,QAAAA,GAAG,EAAE,IAFC;AAGNC,QAAAA,IAAI,EAAE,EAHA;AAINH,QAAAA,OAAO,EAAE,KAJH;AAKNC,QAAAA,UAAU,EAAE,KALN;AAMNG,QAAAA,KAAK,EAAEK;AAND,OAAP;;AAQD;AACC,aAAOH,KAAP;AA1DF;AA4DA,CA9DD;;AAgEA,eAAeD,UAAf","sourcesContent":["import {\r\n\tJOB_LOADED,\r\n\tJOBS_LOADED,\r\n\tJOB_REGISTERED,\r\n\tJOB_UPDATED,\r\n\tJOB_DELETED,\r\n\tJOBS_ERROR,\r\n\tJOBS_CLEARED,\r\n\tJOB_CLEARED,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n\tloading: true,\r\n\tloadingJob: true,\r\n\tjob: null,\r\n\tjobs: [],\r\n\terror: {},\r\n};\r\n\r\nconst jobReducer = (state = initialState, action) => {\r\n\tconst { type, payload } = action;\r\n\tswitch (type) {\r\n\t\tcase JOB_LOADED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloadingJob: false,\r\n\t\t\t\tjob: payload,\r\n\t\t\t\terror: {},\r\n\t\t\t};\r\n\t\tcase JOBS_LOADED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tjobs: payload,\r\n\t\t\t\terror: {},\r\n\t\t\t};\r\n\t\tcase JOB_REGISTERED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tjobs: [...state.jobs, payload],\r\n\t\t\t\terror: {},\r\n\t\t\t};\r\n\t\tcase JOB_UPDATED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tjob: payload,\r\n\t\t\t\tloadingJob: false,\r\n\t\t\t\tjobs: state.jobs.map((item) =>\r\n\t\t\t\t\titem.id !== payload.id ? item : payload\r\n\t\t\t\t),\r\n\t\t\t\terror: {},\r\n\t\t\t};\r\n\t\tcase JOB_DELETED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tjobs: state.jobs.filter((item) => item.id !== payload),\r\n\t\t\t\tloading: false,\r\n\t\t\t\terror: {},\r\n\t\t\t};\r\n\t\tcase JOBS_CLEARED:\r\n\t\t\treturn initialState;\r\n\t\tcase JOB_CLEARED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tjob: null,\r\n\t\t\t\tloadingJob: true,\r\n\t\t\t};\r\n\t\tcase JOBS_ERROR:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tjob: null,\r\n\t\t\t\tjobs: [],\r\n\t\t\t\tloading: false,\r\n\t\t\t\tloadingJob: false,\r\n\t\t\t\terror: payload,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default jobReducer;\r\n"]},"metadata":{},"sourceType":"module"}