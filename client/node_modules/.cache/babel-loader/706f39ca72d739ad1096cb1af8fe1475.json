{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\melig\\\\OneDrive\\\\Escritorio\\\\prog\\\\Tahoe-drone backend\\\\client\\\\src\\\\components\\\\Schedule\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport Calendar from 'react-calendar';\nimport { connect } from 'react-redux';\nimport { checkDayAvailability, checkMonthAvailability } from '../../actions/day';\nimport { updateReservation, registerReservation } from '../../actions/reservation';\nimport Alert from '../layouts/Alert';\nimport PopUp from '../layouts/PopUp';\nimport './Schedule.scss';\n\nconst Schedule = ({\n  job,\n  auth: {\n    loggedUser\n  },\n  reservation,\n  complete,\n  day: {\n    availableHours,\n    loadingAvailableHours,\n    disabledDays\n  },\n  checkMonthAvailability,\n  checkDayAvailability,\n  updateReservation,\n  registerReservation,\n  userId\n}) => {\n  _s();\n\n  const today = new Date();\n  const [formData, setFormData] = useState({\n    hourFrom: '',\n    hourTo: '',\n    value: job.price,\n    job: job.id,\n    user: ''\n  });\n  const {\n    hourFrom,\n    hourTo,\n    value,\n    user\n  } = formData;\n  const [adminValues, setAdminValues] = useState({\n    date: new Date(),\n    tab: 0,\n    toggleModal: false,\n    month: today.getMonth()\n  });\n  const {\n    date,\n    tab,\n    toggleModal,\n    month\n  } = adminValues;\n  useEffect(() => {\n    const today = new Date();\n    checkMonthAvailability(job.id, month, today.getFullYear());\n    if (user === '') setFormData(prev => ({ ...prev,\n      user: loggedUser.id\n    }));\n  }, [checkMonthAvailability, job.id, loggedUser, month, user]);\n\n  const onChangeDate = changedDate => {\n    setAdminValues(prev => ({ ...prev,\n      date: changedDate,\n      tab: 1\n    }));\n    checkDayAvailability(moment(changedDate).format('YYYY-MM-DD[T00:00:00Z]'), job.id);\n  };\n\n  const selectHourFrom = time => {\n    const newDate = new Date(date);\n    newDate.setHours(time);\n    let newToDate;\n    newToDate = new Date(newDate);\n    newToDate.setHours(newDate.getHours() + job.time);\n    setFormData(prev => ({ ...prev,\n      hourFrom: newDate,\n      hourTo: newToDate\n    }));\n    setAdminValues(prev => ({ ...prev,\n      tab: 2\n    }));\n  };\n\n  const tileDisabled = ({\n    date,\n    view\n  }) => {\n    if (view === 'month' && disabledDays.length > 0) {\n      // Check if a date React-Calendar wants to check is on the list of disabled dates\n      return disabledDays.find(dDate => isSameDay(dDate, date));\n    }\n  };\n\n  const isSameDay = (date1, date2) => {\n    if (moment(date1.substring(0, date1.length - 2)).format('MM-DD-YYYY') === moment(date2).format('MM-DD-YYYY')) return true;\n    return false;\n  };\n\n  const createRange = () => {\n    let posibleHours = [];\n\n    for (let x = 0; x < availableHours.length; x++) {\n      let time = availableHours[x][0] === 8 ? 8 : availableHours[x][0] + 1;\n\n      while (availableHours[x][1] - time > job.time) {\n        posibleHours.push(time);\n        time++;\n      }\n\n      if (availableHours[x][1] === 17) posibleHours.push(time);\n    }\n\n    return posibleHours.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"schedule-details-title\",\n        children: \"Time Range:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 5\n      }, this), ' ', posibleHours.map((hour, i) => {\n        const to = hour + job.time;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"schedule-details-item\",\n          onClick: () => selectHourFrom(hour),\n          children: [`${hour % 12 !== 0 ? hour % 12 : 12} ${hour >= 12 ? 'pm' : 'am'}`, ' ', \"-\", ` ${to % 12 !== 0 ? to % 12 : 12} ${to >= 12 ? 'pm' : 'am'}`]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 7\n        }, this);\n      })]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"schedule-details-main error\",\n      children: \"No availability on this day\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 4\n    }, this);\n  };\n\n  const tabOpen = () => {\n    switch (tab) {\n      case 0:\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"schedule-details-main\",\n            children: [\"Pick up a \", reservation && 'New', \" Date\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 7\n          }, this)\n        }, void 0, false);\n\n      case 1:\n        return !loadingAvailableHours && createRange();\n\n      case 2:\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"schedule-details-title\",\n            children: [reservation ? 'New' : 'Reservation', \" Info:\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"form\",\n            onSubmit: e => {\n              e.preventDefault();\n\n              if (reservation) {\n                setAdminValues(prev => ({ ...prev,\n                  toggleModal: !toggleModal\n                }));\n              } else {\n                registerReservation({ ...formData,\n                  hourFrom: moment(hourFrom).format('YYYY-MM-DD[T]HH[:00:00Z]'),\n                  hourTo: moment(hourTo).format('YYYY-MM-DD[T]HH[:00:00Z]')\n                });\n                complete();\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(Alert, {\n              type: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"schedule-details-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"schedule-details-subtitle\",\n                children: \"Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 9\n              }, this), \" \\xA0\", /*#__PURE__*/_jsxDEV(Moment, {\n                date: hourFrom,\n                format: \"MM/DD/YY\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"schedule-details-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"schedule-details-subtitle\",\n                children: \"Time:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 9\n              }, this), \" \\xA0\", /*#__PURE__*/_jsxDEV(Moment, {\n                format: \"h a\",\n                date: hourFrom\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 9\n              }, this), \" -\", ' ', /*#__PURE__*/_jsxDEV(Moment, {\n                format: \"h a\",\n                date: hourTo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 8\n            }, this), !reservation && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"schedule-details-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"schedule-details-subtitle\",\n                children: \"Price:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 10\n              }, this), \" $\", value]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"u-center-text\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary\",\n                children: reservation ? 'Update' : 'Reserve Now!'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true);\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"schedule\",\n    children: [/*#__PURE__*/_jsxDEV(PopUp, {\n      type: \"confirmation\",\n      toggleModal: toggleModal,\n      setToggleModal: () => setAdminValues(prev => ({ ...prev,\n        toggleModal: !toggleModal\n      })),\n      confirm: () => {\n        updateReservation({\n          hourFrom: moment(hourFrom).format('YYYY-MM-DD[T]HH:mm:SS[Z]'),\n          hourTo: moment(hourTo).format('YYYY-MM-DD[T]HH:mm:SS[Z]')\n        }, reservation.id, loggedUser.type);\n        complete();\n      },\n      text: \"Are you sure you want to modify the reservation?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"schedule-calendar\",\n      children: /*#__PURE__*/_jsxDEV(Calendar, {\n        value: date,\n        onChange: onChangeDate,\n        minDate: today,\n        maxDate: new Date(today.getFullYear() + 1, today.getMonth(), today.getDate()),\n        onActiveStartDateChange: e => {\n          if (e.view === 'month') {\n            const month = e.activeStartDate.getMonth();\n            setAdminValues(prev => ({ ...prev,\n              month\n            }));\n            checkMonthAvailability(job.id, month, e.activeStartDate.getFullYear());\n          }\n        },\n        tileDisabled: tileDisabled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"schedule-details\",\n      children: tabOpen()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Schedule, \"qz1pgtB7IqDU4zWwZAjR85ld0vQ=\");\n\n_c = Schedule;\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  day: state.day\n});\n\nexport default connect(mapStateToProps, {\n  checkDayAvailability,\n  checkMonthAvailability,\n  updateReservation,\n  registerReservation\n})(Schedule);\n\nvar _c;\n\n$RefreshReg$(_c, \"Schedule\");","map":{"version":3,"sources":["C:/Users/melig/OneDrive/Escritorio/prog/Tahoe-drone backend/client/src/components/Schedule/index.js"],"names":["React","useState","useEffect","Moment","moment","Calendar","connect","checkDayAvailability","checkMonthAvailability","updateReservation","registerReservation","Alert","PopUp","Schedule","job","auth","loggedUser","reservation","complete","day","availableHours","loadingAvailableHours","disabledDays","userId","today","Date","formData","setFormData","hourFrom","hourTo","value","price","id","user","adminValues","setAdminValues","date","tab","toggleModal","month","getMonth","getFullYear","prev","onChangeDate","changedDate","format","selectHourFrom","time","newDate","setHours","newToDate","getHours","tileDisabled","view","length","find","dDate","isSameDay","date1","date2","substring","createRange","posibleHours","x","push","map","hour","i","to","tabOpen","e","preventDefault","type","getDate","activeStartDate","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Moment from 'react-moment';\r\nimport moment from 'moment';\r\nimport Calendar from 'react-calendar';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n\tcheckDayAvailability,\r\n\tcheckMonthAvailability,\r\n} from '../../actions/day';\r\nimport {\r\n\tupdateReservation,\r\n\tregisterReservation,\r\n} from '../../actions/reservation';\r\n\r\nimport Alert from '../layouts/Alert';\r\nimport PopUp from '../layouts/PopUp';\r\nimport './Schedule.scss';\r\n\r\nconst Schedule = ({\r\n\tjob,\r\n\tauth: { loggedUser },\r\n\treservation,\r\n\tcomplete,\r\n\tday: { availableHours, loadingAvailableHours, disabledDays },\r\n\tcheckMonthAvailability,\r\n\tcheckDayAvailability,\r\n\tupdateReservation,\r\n\tregisterReservation,\r\n\tuserId,\r\n}) => {\r\n\tconst today = new Date();\r\n\r\n\tconst [formData, setFormData] = useState({\r\n\t\thourFrom: '',\r\n\t\thourTo: '',\r\n\t\tvalue: job.price,\r\n\t\tjob: job.id,\r\n\t\tuser: '',\r\n\t});\r\n\r\n\tconst { hourFrom, hourTo, value, user } = formData;\r\n\r\n\tconst [adminValues, setAdminValues] = useState({\r\n\t\tdate: new Date(),\r\n\t\ttab: 0,\r\n\t\ttoggleModal: false,\r\n\t\tmonth: today.getMonth(),\r\n\t});\r\n\r\n\tconst { date, tab, toggleModal, month } = adminValues;\r\n\r\n\tuseEffect(() => {\r\n\t\tconst today = new Date();\r\n\r\n\t\tcheckMonthAvailability(job.id, month, today.getFullYear());\r\n\r\n\t\tif (user === '') setFormData((prev) => ({ ...prev, user: loggedUser.id }));\r\n\t}, [checkMonthAvailability, job.id, loggedUser, month, user]);\r\n\r\n\tconst onChangeDate = (changedDate) => {\r\n\t\tsetAdminValues((prev) => ({\r\n\t\t\t...prev,\r\n\t\t\tdate: changedDate,\r\n\t\t\ttab: 1,\r\n\t\t}));\r\n\t\tcheckDayAvailability(\r\n\t\t\tmoment(changedDate).format('YYYY-MM-DD[T00:00:00Z]'),\r\n\t\t\tjob.id\r\n\t\t);\r\n\t};\r\n\r\n\tconst selectHourFrom = (time) => {\r\n\t\tconst newDate = new Date(date);\r\n\t\tnewDate.setHours(time);\r\n\r\n\t\tlet newToDate;\r\n\r\n\t\tnewToDate = new Date(newDate);\r\n\t\tnewToDate.setHours(newDate.getHours() + job.time);\r\n\r\n\t\tsetFormData((prev) => ({\r\n\t\t\t...prev,\r\n\t\t\thourFrom: newDate,\r\n\t\t\thourTo: newToDate,\r\n\t\t}));\r\n\r\n\t\tsetAdminValues((prev) => ({\r\n\t\t\t...prev,\r\n\t\t\ttab: 2,\r\n\t\t}));\r\n\t};\r\n\r\n\tconst tileDisabled = ({ date, view }) => {\r\n\t\tif (view === 'month' && disabledDays.length > 0) {\r\n\t\t\t// Check if a date React-Calendar wants to check is on the list of disabled dates\r\n\t\t\treturn disabledDays.find((dDate) => isSameDay(dDate, date));\r\n\t\t}\r\n\t};\r\n\r\n\tconst isSameDay = (date1, date2) => {\r\n\t\tif (\r\n\t\t\tmoment(date1.substring(0, date1.length - 2)).format('MM-DD-YYYY') ===\r\n\t\t\tmoment(date2).format('MM-DD-YYYY')\r\n\t\t)\r\n\t\t\treturn true;\r\n\t\treturn false;\r\n\t};\r\n\r\n\tconst createRange = () => {\r\n\t\tlet posibleHours = [];\r\n\r\n\t\tfor (let x = 0; x < availableHours.length; x++) {\r\n\t\t\tlet time = availableHours[x][0] === 8 ? 8 : availableHours[x][0] + 1;\r\n\t\t\twhile (availableHours[x][1] - time > job.time) {\r\n\t\t\t\tposibleHours.push(time);\r\n\t\t\t\ttime++;\r\n\t\t\t}\r\n\t\t\tif (availableHours[x][1] === 17) posibleHours.push(time);\r\n\t\t}\r\n\r\n\t\treturn posibleHours.length > 0 ? (\r\n\t\t\t<>\r\n\t\t\t\t<p className='schedule-details-title'>Time Range:</p>{' '}\r\n\t\t\t\t{posibleHours.map((hour, i) => {\r\n\t\t\t\t\tconst to = hour + job.time;\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName='schedule-details-item'\r\n\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\tonClick={() => selectHourFrom(hour)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{`${hour % 12 !== 0 ? hour % 12 : 12} ${\r\n\t\t\t\t\t\t\t\thour >= 12 ? 'pm' : 'am'\r\n\t\t\t\t\t\t\t}`}{' '}\r\n\t\t\t\t\t\t\t-{` ${to % 12 !== 0 ? to % 12 : 12} ${to >= 12 ? 'pm' : 'am'}`}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</>\r\n\t\t) : (\r\n\t\t\t<h2 className='schedule-details-main error'>\r\n\t\t\t\tNo availability on this day\r\n\t\t\t</h2>\r\n\t\t);\r\n\t};\r\n\r\n\tconst tabOpen = () => {\r\n\t\tswitch (tab) {\r\n\t\t\tcase 0:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<h5 className='schedule-details-main'>\r\n\t\t\t\t\t\t\tPick up a {reservation && 'New'} Date\r\n\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t</>\r\n\t\t\t\t);\r\n\t\t\tcase 1:\r\n\t\t\t\treturn !loadingAvailableHours && createRange();\r\n\t\t\tcase 2:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<p className='schedule-details-title'>\r\n\t\t\t\t\t\t\t{reservation ? 'New' : 'Reservation'} Info:\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<form\r\n\t\t\t\t\t\t\tclassName='form'\r\n\t\t\t\t\t\t\tonSubmit={(e) => {\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\t\t\t\t\tif (reservation) {\r\n\t\t\t\t\t\t\t\t\tsetAdminValues((prev) => ({\r\n\t\t\t\t\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\t\t\t\t\ttoggleModal: !toggleModal,\r\n\t\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tregisterReservation({\r\n\t\t\t\t\t\t\t\t\t\t...formData,\r\n\t\t\t\t\t\t\t\t\t\thourFrom: moment(hourFrom).format(\r\n\t\t\t\t\t\t\t\t\t\t\t'YYYY-MM-DD[T]HH[:00:00Z]'\r\n\t\t\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\t\t\thourTo: moment(hourTo).format('YYYY-MM-DD[T]HH[:00:00Z]'),\r\n\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t\tcomplete();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Alert type='2' />\r\n\t\t\t\t\t\t\t<p className='schedule-details-info'>\r\n\t\t\t\t\t\t\t\t<span className='schedule-details-subtitle'>Date:</span> &nbsp;\r\n\t\t\t\t\t\t\t\t<Moment date={hourFrom} format='MM/DD/YY' />\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<p className='schedule-details-info'>\r\n\t\t\t\t\t\t\t\t<span className='schedule-details-subtitle'>Time:</span> &nbsp;\r\n\t\t\t\t\t\t\t\t<Moment format='h a' date={hourFrom} /> -{' '}\r\n\t\t\t\t\t\t\t\t<Moment format='h a' date={hourTo} />\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t{!reservation && (\r\n\t\t\t\t\t\t\t\t<p className='schedule-details-info'>\r\n\t\t\t\t\t\t\t\t\t<span className='schedule-details-subtitle'>Price:</span> $\r\n\t\t\t\t\t\t\t\t\t{value}\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t<div className='u-center-text'>\r\n\t\t\t\t\t\t\t\t<button type='submit' className='btn btn-primary'>\r\n\t\t\t\t\t\t\t\t\t{reservation ? 'Update' : 'Reserve Now!'}\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</>\r\n\t\t\t\t);\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='schedule'>\r\n\t\t\t<PopUp\r\n\t\t\t\ttype='confirmation'\r\n\t\t\t\ttoggleModal={toggleModal}\r\n\t\t\t\tsetToggleModal={() =>\r\n\t\t\t\t\tsetAdminValues((prev) => ({\r\n\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\ttoggleModal: !toggleModal,\r\n\t\t\t\t\t}))\r\n\t\t\t\t}\r\n\t\t\t\tconfirm={() => {\r\n\t\t\t\t\tupdateReservation(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\thourFrom: moment(hourFrom).format('YYYY-MM-DD[T]HH:mm:SS[Z]'),\r\n\t\t\t\t\t\t\thourTo: moment(hourTo).format('YYYY-MM-DD[T]HH:mm:SS[Z]'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\treservation.id,\r\n\t\t\t\t\t\tloggedUser.type\r\n\t\t\t\t\t);\r\n\t\t\t\t\tcomplete();\r\n\t\t\t\t}}\r\n\t\t\t\ttext='Are you sure you want to modify the reservation?'\r\n\t\t\t/>\r\n\r\n\t\t\t<div className='schedule-calendar'>\r\n\t\t\t\t<Calendar\r\n\t\t\t\t\tvalue={date}\r\n\t\t\t\t\tonChange={onChangeDate}\r\n\t\t\t\t\tminDate={today}\r\n\t\t\t\t\tmaxDate={\r\n\t\t\t\t\t\tnew Date(today.getFullYear() + 1, today.getMonth(), today.getDate())\r\n\t\t\t\t\t}\r\n\t\t\t\t\tonActiveStartDateChange={(e) => {\r\n\t\t\t\t\t\tif (e.view === 'month') {\r\n\t\t\t\t\t\t\tconst month = e.activeStartDate.getMonth();\r\n\t\t\t\t\t\t\tsetAdminValues((prev) => ({ ...prev, month }));\r\n\t\t\t\t\t\t\tcheckMonthAvailability(\r\n\t\t\t\t\t\t\t\tjob.id,\r\n\t\t\t\t\t\t\t\tmonth,\r\n\t\t\t\t\t\t\t\te.activeStartDate.getFullYear()\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t\ttileDisabled={tileDisabled}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className='schedule-details'>{tabOpen()}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tauth: state.auth,\r\n\tday: state.day,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n\tcheckDayAvailability,\r\n\tcheckMonthAvailability,\r\n\tupdateReservation,\r\n\tregisterReservation,\r\n})(Schedule);\r\n"]},"metadata":{},"sourceType":"module"}